syntax = "proto3";

package relatorio;


service RelatorioService {

  //Remessa
  rpc listRemessa (ListCriteriaRequestRemessa) returns (ServiceResponseListRemessa) {}
  rpc findOneRemessa (IdRequest) returns (ServiceResponseRemessa) {}
  rpc createRemessa (RemessaData) returns (ServiceResponseRemessa) {}
  rpc updateRemessa (RemessaUpdateRequest) returns (ServiceResponseRemessa) {}
  rpc removeRemessa (IdRequest) returns (ServiceResponseRemessa) {}
  rpc removeAllRemessa (WithoutParams) returns (ServiceResponseRemessa) {}
  rpc createManyRemessa (RemessaManyData) returns (ServiceResponseRemessa) {}
}


message IdRequest{
    int32 id = 1;
}

message WithoutParams {}

//Remessa

message ListCriteriaRequestRemessa {
    string nmCliente = 1; 
    string nmGrupo = 2;
    string dtCadastroInicio = 3;
    string dtCadastroFim = 4;
    int32 items = 5;
    int32 page = 6;
    map<string, string> order = 7;
}

message RemessaData {
    int32 idRemessa = 1;
    int32 idGrupo = 2;
    int32 idCliente = 3;
    int32 nuMes = 4;
    int32 nuAno = 5;
    string nmCliente = 6;
    string nmGrupo = 7;
    int32 idCaso = 8;
    int32 nuTitulos = 9;
    string nmMes = 10;
    string dtCadastro = 11;
    string createdDate = 12;
    string updatedDate = 13;
    string deletedDate = 14;    
}

message RemessaManyData {
    repeated RemessaData data = 1;
}
message RemessaUpdateRequest{
    int32 idRemessa = 1;
    RemessaData remessa = 2;
}

message ListResultDevedor {
    repeated RemessaData result = 1;
    int32 total = 2;
}

message ServiceResponseListRemessa {
    int32 status = 1;
    string message = 2;
    ListResultDevedor data = 3;
    string error = 4;
}

message ServiceResponseRemessa {
    int32 status = 1;
    string message = 2;
    repeated RemessaData data = 3;
    string error = 4;
}

