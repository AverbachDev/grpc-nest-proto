syntax = "proto3";

package pagamento;


service PagamentoService {

    rpc listPagamento (ListCriteriaRequestPagamento) returns (ServiceResponseListPagamento) {}
    rpc findOnePagamento (IdRequest) returns (ServiceResponsePagamento) {}
    rpc createPagamento (PagamentoData) returns (ServiceResponsePagamento) {}
    rpc updatePagamento (PagamentoUpdateRequest) returns (ServiceResponsePagamento) {}
    rpc removePagamento (IdRequest) returns (ServiceResponsePagamento) {}
}


message IdRequest{
    int32 id = 1;
}

//PAGAMENTO

message ListCriteriaRequestPagamento {
    int32 idPagto = 1;
    string dtPagto = 2;
    double nuValorPago = 3;
    int32 items = 4;
    int32 page = 5;
    map<string, string> order = 6;
}

message PagamentoData {
    int32 id = 1;
    int32 idBanco = 2;
    string deObs = 3;
    double nuValorPago = 4;
    string dtPagto = 5;
    bool cdPagto = 6;
    string cdCheque = 7;
    string deCheque = 8;
    int32 idUsuaOper = 9;
    string dtRegistro = 10;
    string createdDate = 11;
    string updatedDate = 12;
    string deletedDate = 13;
}

message PagamentoUpdateRequest{
    int32 id = 1;
    PagamentoData pagamento = 2;
}

message ServiceResponsePagamento {
    int32 status = 1;
    string message = 2;
    repeated PagamentoData data = 3;
    string error = 4;
}

message ServiceResponseListPagamento {
    int32 status = 1;
    string message = 2;
    ListResultPagamento data = 3;
    string error = 4;
}

message ListResultPagamento {
    repeated PagamentoData result = 1;
    int32 total = 2;
}
