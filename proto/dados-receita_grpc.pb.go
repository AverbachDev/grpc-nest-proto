// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.22.1
// source: proto/dados-receita.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	DadosReceitaService_ProcessImport_FullMethodName                 = "/proto.receita.DadosReceitaService/processImport"
	DadosReceitaService_ListCnpjEmpresa_FullMethodName               = "/proto.receita.DadosReceitaService/listCnpjEmpresa"
	DadosReceitaService_ListSocioEmpresa_FullMethodName              = "/proto.receita.DadosReceitaService/listSocioEmpresa"
	DadosReceitaService_ListCnae_FullMethodName                      = "/proto.receita.DadosReceitaService/listCnae"
	DadosReceitaService_CreateCnae_FullMethodName                    = "/proto.receita.DadosReceitaService/createCnae"
	DadosReceitaService_ListEmpresa_FullMethodName                   = "/proto.receita.DadosReceitaService/listEmpresa"
	DadosReceitaService_CreateEmpresa_FullMethodName                 = "/proto.receita.DadosReceitaService/createEmpresa"
	DadosReceitaService_ListEstabelecimento_FullMethodName           = "/proto.receita.DadosReceitaService/listEstabelecimento"
	DadosReceitaService_CreateEstabelecimento_FullMethodName         = "/proto.receita.DadosReceitaService/createEstabelecimento"
	DadosReceitaService_ListMotivoSituacaoCadastral_FullMethodName   = "/proto.receita.DadosReceitaService/listMotivoSituacaoCadastral"
	DadosReceitaService_CreateMotivoSituacaoCadastral_FullMethodName = "/proto.receita.DadosReceitaService/createMotivoSituacaoCadastral"
	DadosReceitaService_ListMunicipio_FullMethodName                 = "/proto.receita.DadosReceitaService/listMunicipio"
	DadosReceitaService_CreateMunicipio_FullMethodName               = "/proto.receita.DadosReceitaService/createMunicipio"
	DadosReceitaService_ListNaturezaJuridica_FullMethodName          = "/proto.receita.DadosReceitaService/listNaturezaJuridica"
	DadosReceitaService_CreateNaturezaJuridica_FullMethodName        = "/proto.receita.DadosReceitaService/createNaturezaJuridica"
	DadosReceitaService_ListOptanteSimples_FullMethodName            = "/proto.receita.DadosReceitaService/listOptanteSimples"
	DadosReceitaService_CreateOptanteSimples_FullMethodName          = "/proto.receita.DadosReceitaService/createOptanteSimples"
	DadosReceitaService_ListPais_FullMethodName                      = "/proto.receita.DadosReceitaService/listPais"
	DadosReceitaService_CreatePais_FullMethodName                    = "/proto.receita.DadosReceitaService/createPais"
	DadosReceitaService_ListQualificacaoSocio_FullMethodName         = "/proto.receita.DadosReceitaService/listQualificacaoSocio"
	DadosReceitaService_CreateQualificacaoSocio_FullMethodName       = "/proto.receita.DadosReceitaService/createQualificacaoSocio"
	DadosReceitaService_ListSocio_FullMethodName                     = "/proto.receita.DadosReceitaService/listSocio"
	DadosReceitaService_CreateSocio_FullMethodName                   = "/proto.receita.DadosReceitaService/createSocio"
)

// DadosReceitaServiceClient is the client API for DadosReceitaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DadosReceitaServiceClient interface {
	ProcessImport(ctx context.Context, in *WithoutParams, opts ...grpc.CallOption) (*ServiceResponseProcessImport, error)
	// CnpjEmpresa
	ListCnpjEmpresa(ctx context.Context, in *ListCriteriaRequestCnpjEmpresa, opts ...grpc.CallOption) (*ServiceResponseListCnpjEmpresa, error)
	ListSocioEmpresa(ctx context.Context, in *ListCriteriaRequestSocioEmpresa, opts ...grpc.CallOption) (*ServiceResponseListSocioEmpresa, error)
	// Cnae
	ListCnae(ctx context.Context, in *ListCriteriaRequestCnae, opts ...grpc.CallOption) (*ServiceResponseListCnae, error)
	CreateCnae(ctx context.Context, in *CnaeData, opts ...grpc.CallOption) (*ServiceResponseCnae, error)
	// Empresa
	ListEmpresa(ctx context.Context, in *ListCriteriaRequestEmpresa, opts ...grpc.CallOption) (*ServiceResponseListEmpresa, error)
	CreateEmpresa(ctx context.Context, in *EmpresaData, opts ...grpc.CallOption) (*ServiceResponseEmpresa, error)
	// Estabelecimento
	ListEstabelecimento(ctx context.Context, in *ListCriteriaRequestEstabelecimento, opts ...grpc.CallOption) (*ServiceResponseListEstabelecimento, error)
	CreateEstabelecimento(ctx context.Context, in *EstabelecimentoData, opts ...grpc.CallOption) (*ServiceResponseEstabelecimento, error)
	// MotivoSituacaoCadastral
	ListMotivoSituacaoCadastral(ctx context.Context, in *ListCriteriaRequestMotivoSituacaoCadastral, opts ...grpc.CallOption) (*ServiceResponseListMotivoSituacaoCadastral, error)
	CreateMotivoSituacaoCadastral(ctx context.Context, in *MotivoSituacaoCadastralData, opts ...grpc.CallOption) (*ServiceResponseMotivoSituacaoCadastral, error)
	// Municipio
	ListMunicipio(ctx context.Context, in *ListCriteriaRequestMunicipio, opts ...grpc.CallOption) (*ServiceResponseListMunicipio, error)
	CreateMunicipio(ctx context.Context, in *MunicipioData, opts ...grpc.CallOption) (*ServiceResponseMunicipio, error)
	// NaturezaJuridica
	ListNaturezaJuridica(ctx context.Context, in *ListCriteriaRequestNaturezaJuridica, opts ...grpc.CallOption) (*ServiceResponseListNaturezaJuridica, error)
	CreateNaturezaJuridica(ctx context.Context, in *NaturezaJuridicaData, opts ...grpc.CallOption) (*ServiceResponseNaturezaJuridica, error)
	// OptanteSimples
	ListOptanteSimples(ctx context.Context, in *ListCriteriaRequestOptanteSimples, opts ...grpc.CallOption) (*ServiceResponseListOptanteSimples, error)
	CreateOptanteSimples(ctx context.Context, in *OptanteSimplesData, opts ...grpc.CallOption) (*ServiceResponseOptanteSimples, error)
	// Pais
	ListPais(ctx context.Context, in *ListCriteriaRequestPais, opts ...grpc.CallOption) (*ServiceResponseListPais, error)
	CreatePais(ctx context.Context, in *PaisData, opts ...grpc.CallOption) (*ServiceResponsePais, error)
	// QualificacaoSocio
	ListQualificacaoSocio(ctx context.Context, in *ListCriteriaRequestQualificacaoSocio, opts ...grpc.CallOption) (*ServiceResponseListQualificacaoSocio, error)
	CreateQualificacaoSocio(ctx context.Context, in *QualificacaoSocioData, opts ...grpc.CallOption) (*ServiceResponseQualificacaoSocio, error)
	// Socio
	ListSocio(ctx context.Context, in *ListCriteriaRequestSocio, opts ...grpc.CallOption) (*ServiceResponseListSocio, error)
	CreateSocio(ctx context.Context, in *SocioData, opts ...grpc.CallOption) (*ServiceResponseSocio, error)
}

type dadosReceitaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDadosReceitaServiceClient(cc grpc.ClientConnInterface) DadosReceitaServiceClient {
	return &dadosReceitaServiceClient{cc}
}

func (c *dadosReceitaServiceClient) ProcessImport(ctx context.Context, in *WithoutParams, opts ...grpc.CallOption) (*ServiceResponseProcessImport, error) {
	out := new(ServiceResponseProcessImport)
	err := c.cc.Invoke(ctx, DadosReceitaService_ProcessImport_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) ListCnpjEmpresa(ctx context.Context, in *ListCriteriaRequestCnpjEmpresa, opts ...grpc.CallOption) (*ServiceResponseListCnpjEmpresa, error) {
	out := new(ServiceResponseListCnpjEmpresa)
	err := c.cc.Invoke(ctx, DadosReceitaService_ListCnpjEmpresa_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) ListSocioEmpresa(ctx context.Context, in *ListCriteriaRequestSocioEmpresa, opts ...grpc.CallOption) (*ServiceResponseListSocioEmpresa, error) {
	out := new(ServiceResponseListSocioEmpresa)
	err := c.cc.Invoke(ctx, DadosReceitaService_ListSocioEmpresa_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) ListCnae(ctx context.Context, in *ListCriteriaRequestCnae, opts ...grpc.CallOption) (*ServiceResponseListCnae, error) {
	out := new(ServiceResponseListCnae)
	err := c.cc.Invoke(ctx, DadosReceitaService_ListCnae_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) CreateCnae(ctx context.Context, in *CnaeData, opts ...grpc.CallOption) (*ServiceResponseCnae, error) {
	out := new(ServiceResponseCnae)
	err := c.cc.Invoke(ctx, DadosReceitaService_CreateCnae_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) ListEmpresa(ctx context.Context, in *ListCriteriaRequestEmpresa, opts ...grpc.CallOption) (*ServiceResponseListEmpresa, error) {
	out := new(ServiceResponseListEmpresa)
	err := c.cc.Invoke(ctx, DadosReceitaService_ListEmpresa_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) CreateEmpresa(ctx context.Context, in *EmpresaData, opts ...grpc.CallOption) (*ServiceResponseEmpresa, error) {
	out := new(ServiceResponseEmpresa)
	err := c.cc.Invoke(ctx, DadosReceitaService_CreateEmpresa_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) ListEstabelecimento(ctx context.Context, in *ListCriteriaRequestEstabelecimento, opts ...grpc.CallOption) (*ServiceResponseListEstabelecimento, error) {
	out := new(ServiceResponseListEstabelecimento)
	err := c.cc.Invoke(ctx, DadosReceitaService_ListEstabelecimento_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) CreateEstabelecimento(ctx context.Context, in *EstabelecimentoData, opts ...grpc.CallOption) (*ServiceResponseEstabelecimento, error) {
	out := new(ServiceResponseEstabelecimento)
	err := c.cc.Invoke(ctx, DadosReceitaService_CreateEstabelecimento_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) ListMotivoSituacaoCadastral(ctx context.Context, in *ListCriteriaRequestMotivoSituacaoCadastral, opts ...grpc.CallOption) (*ServiceResponseListMotivoSituacaoCadastral, error) {
	out := new(ServiceResponseListMotivoSituacaoCadastral)
	err := c.cc.Invoke(ctx, DadosReceitaService_ListMotivoSituacaoCadastral_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) CreateMotivoSituacaoCadastral(ctx context.Context, in *MotivoSituacaoCadastralData, opts ...grpc.CallOption) (*ServiceResponseMotivoSituacaoCadastral, error) {
	out := new(ServiceResponseMotivoSituacaoCadastral)
	err := c.cc.Invoke(ctx, DadosReceitaService_CreateMotivoSituacaoCadastral_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) ListMunicipio(ctx context.Context, in *ListCriteriaRequestMunicipio, opts ...grpc.CallOption) (*ServiceResponseListMunicipio, error) {
	out := new(ServiceResponseListMunicipio)
	err := c.cc.Invoke(ctx, DadosReceitaService_ListMunicipio_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) CreateMunicipio(ctx context.Context, in *MunicipioData, opts ...grpc.CallOption) (*ServiceResponseMunicipio, error) {
	out := new(ServiceResponseMunicipio)
	err := c.cc.Invoke(ctx, DadosReceitaService_CreateMunicipio_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) ListNaturezaJuridica(ctx context.Context, in *ListCriteriaRequestNaturezaJuridica, opts ...grpc.CallOption) (*ServiceResponseListNaturezaJuridica, error) {
	out := new(ServiceResponseListNaturezaJuridica)
	err := c.cc.Invoke(ctx, DadosReceitaService_ListNaturezaJuridica_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) CreateNaturezaJuridica(ctx context.Context, in *NaturezaJuridicaData, opts ...grpc.CallOption) (*ServiceResponseNaturezaJuridica, error) {
	out := new(ServiceResponseNaturezaJuridica)
	err := c.cc.Invoke(ctx, DadosReceitaService_CreateNaturezaJuridica_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) ListOptanteSimples(ctx context.Context, in *ListCriteriaRequestOptanteSimples, opts ...grpc.CallOption) (*ServiceResponseListOptanteSimples, error) {
	out := new(ServiceResponseListOptanteSimples)
	err := c.cc.Invoke(ctx, DadosReceitaService_ListOptanteSimples_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) CreateOptanteSimples(ctx context.Context, in *OptanteSimplesData, opts ...grpc.CallOption) (*ServiceResponseOptanteSimples, error) {
	out := new(ServiceResponseOptanteSimples)
	err := c.cc.Invoke(ctx, DadosReceitaService_CreateOptanteSimples_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) ListPais(ctx context.Context, in *ListCriteriaRequestPais, opts ...grpc.CallOption) (*ServiceResponseListPais, error) {
	out := new(ServiceResponseListPais)
	err := c.cc.Invoke(ctx, DadosReceitaService_ListPais_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) CreatePais(ctx context.Context, in *PaisData, opts ...grpc.CallOption) (*ServiceResponsePais, error) {
	out := new(ServiceResponsePais)
	err := c.cc.Invoke(ctx, DadosReceitaService_CreatePais_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) ListQualificacaoSocio(ctx context.Context, in *ListCriteriaRequestQualificacaoSocio, opts ...grpc.CallOption) (*ServiceResponseListQualificacaoSocio, error) {
	out := new(ServiceResponseListQualificacaoSocio)
	err := c.cc.Invoke(ctx, DadosReceitaService_ListQualificacaoSocio_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) CreateQualificacaoSocio(ctx context.Context, in *QualificacaoSocioData, opts ...grpc.CallOption) (*ServiceResponseQualificacaoSocio, error) {
	out := new(ServiceResponseQualificacaoSocio)
	err := c.cc.Invoke(ctx, DadosReceitaService_CreateQualificacaoSocio_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) ListSocio(ctx context.Context, in *ListCriteriaRequestSocio, opts ...grpc.CallOption) (*ServiceResponseListSocio, error) {
	out := new(ServiceResponseListSocio)
	err := c.cc.Invoke(ctx, DadosReceitaService_ListSocio_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dadosReceitaServiceClient) CreateSocio(ctx context.Context, in *SocioData, opts ...grpc.CallOption) (*ServiceResponseSocio, error) {
	out := new(ServiceResponseSocio)
	err := c.cc.Invoke(ctx, DadosReceitaService_CreateSocio_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DadosReceitaServiceServer is the server API for DadosReceitaService service.
// All implementations must embed UnimplementedDadosReceitaServiceServer
// for forward compatibility
type DadosReceitaServiceServer interface {
	ProcessImport(context.Context, *WithoutParams) (*ServiceResponseProcessImport, error)
	// CnpjEmpresa
	ListCnpjEmpresa(context.Context, *ListCriteriaRequestCnpjEmpresa) (*ServiceResponseListCnpjEmpresa, error)
	ListSocioEmpresa(context.Context, *ListCriteriaRequestSocioEmpresa) (*ServiceResponseListSocioEmpresa, error)
	// Cnae
	ListCnae(context.Context, *ListCriteriaRequestCnae) (*ServiceResponseListCnae, error)
	CreateCnae(context.Context, *CnaeData) (*ServiceResponseCnae, error)
	// Empresa
	ListEmpresa(context.Context, *ListCriteriaRequestEmpresa) (*ServiceResponseListEmpresa, error)
	CreateEmpresa(context.Context, *EmpresaData) (*ServiceResponseEmpresa, error)
	// Estabelecimento
	ListEstabelecimento(context.Context, *ListCriteriaRequestEstabelecimento) (*ServiceResponseListEstabelecimento, error)
	CreateEstabelecimento(context.Context, *EstabelecimentoData) (*ServiceResponseEstabelecimento, error)
	// MotivoSituacaoCadastral
	ListMotivoSituacaoCadastral(context.Context, *ListCriteriaRequestMotivoSituacaoCadastral) (*ServiceResponseListMotivoSituacaoCadastral, error)
	CreateMotivoSituacaoCadastral(context.Context, *MotivoSituacaoCadastralData) (*ServiceResponseMotivoSituacaoCadastral, error)
	// Municipio
	ListMunicipio(context.Context, *ListCriteriaRequestMunicipio) (*ServiceResponseListMunicipio, error)
	CreateMunicipio(context.Context, *MunicipioData) (*ServiceResponseMunicipio, error)
	// NaturezaJuridica
	ListNaturezaJuridica(context.Context, *ListCriteriaRequestNaturezaJuridica) (*ServiceResponseListNaturezaJuridica, error)
	CreateNaturezaJuridica(context.Context, *NaturezaJuridicaData) (*ServiceResponseNaturezaJuridica, error)
	// OptanteSimples
	ListOptanteSimples(context.Context, *ListCriteriaRequestOptanteSimples) (*ServiceResponseListOptanteSimples, error)
	CreateOptanteSimples(context.Context, *OptanteSimplesData) (*ServiceResponseOptanteSimples, error)
	// Pais
	ListPais(context.Context, *ListCriteriaRequestPais) (*ServiceResponseListPais, error)
	CreatePais(context.Context, *PaisData) (*ServiceResponsePais, error)
	// QualificacaoSocio
	ListQualificacaoSocio(context.Context, *ListCriteriaRequestQualificacaoSocio) (*ServiceResponseListQualificacaoSocio, error)
	CreateQualificacaoSocio(context.Context, *QualificacaoSocioData) (*ServiceResponseQualificacaoSocio, error)
	// Socio
	ListSocio(context.Context, *ListCriteriaRequestSocio) (*ServiceResponseListSocio, error)
	CreateSocio(context.Context, *SocioData) (*ServiceResponseSocio, error)
	mustEmbedUnimplementedDadosReceitaServiceServer()
}

// UnimplementedDadosReceitaServiceServer must be embedded to have forward compatible implementations.
type UnimplementedDadosReceitaServiceServer struct {
}

func (UnimplementedDadosReceitaServiceServer) ProcessImport(context.Context, *WithoutParams) (*ServiceResponseProcessImport, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessImport not implemented")
}
func (UnimplementedDadosReceitaServiceServer) ListCnpjEmpresa(context.Context, *ListCriteriaRequestCnpjEmpresa) (*ServiceResponseListCnpjEmpresa, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCnpjEmpresa not implemented")
}
func (UnimplementedDadosReceitaServiceServer) ListSocioEmpresa(context.Context, *ListCriteriaRequestSocioEmpresa) (*ServiceResponseListSocioEmpresa, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSocioEmpresa not implemented")
}
func (UnimplementedDadosReceitaServiceServer) ListCnae(context.Context, *ListCriteriaRequestCnae) (*ServiceResponseListCnae, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCnae not implemented")
}
func (UnimplementedDadosReceitaServiceServer) CreateCnae(context.Context, *CnaeData) (*ServiceResponseCnae, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCnae not implemented")
}
func (UnimplementedDadosReceitaServiceServer) ListEmpresa(context.Context, *ListCriteriaRequestEmpresa) (*ServiceResponseListEmpresa, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEmpresa not implemented")
}
func (UnimplementedDadosReceitaServiceServer) CreateEmpresa(context.Context, *EmpresaData) (*ServiceResponseEmpresa, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEmpresa not implemented")
}
func (UnimplementedDadosReceitaServiceServer) ListEstabelecimento(context.Context, *ListCriteriaRequestEstabelecimento) (*ServiceResponseListEstabelecimento, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEstabelecimento not implemented")
}
func (UnimplementedDadosReceitaServiceServer) CreateEstabelecimento(context.Context, *EstabelecimentoData) (*ServiceResponseEstabelecimento, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEstabelecimento not implemented")
}
func (UnimplementedDadosReceitaServiceServer) ListMotivoSituacaoCadastral(context.Context, *ListCriteriaRequestMotivoSituacaoCadastral) (*ServiceResponseListMotivoSituacaoCadastral, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMotivoSituacaoCadastral not implemented")
}
func (UnimplementedDadosReceitaServiceServer) CreateMotivoSituacaoCadastral(context.Context, *MotivoSituacaoCadastralData) (*ServiceResponseMotivoSituacaoCadastral, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMotivoSituacaoCadastral not implemented")
}
func (UnimplementedDadosReceitaServiceServer) ListMunicipio(context.Context, *ListCriteriaRequestMunicipio) (*ServiceResponseListMunicipio, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMunicipio not implemented")
}
func (UnimplementedDadosReceitaServiceServer) CreateMunicipio(context.Context, *MunicipioData) (*ServiceResponseMunicipio, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMunicipio not implemented")
}
func (UnimplementedDadosReceitaServiceServer) ListNaturezaJuridica(context.Context, *ListCriteriaRequestNaturezaJuridica) (*ServiceResponseListNaturezaJuridica, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNaturezaJuridica not implemented")
}
func (UnimplementedDadosReceitaServiceServer) CreateNaturezaJuridica(context.Context, *NaturezaJuridicaData) (*ServiceResponseNaturezaJuridica, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNaturezaJuridica not implemented")
}
func (UnimplementedDadosReceitaServiceServer) ListOptanteSimples(context.Context, *ListCriteriaRequestOptanteSimples) (*ServiceResponseListOptanteSimples, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOptanteSimples not implemented")
}
func (UnimplementedDadosReceitaServiceServer) CreateOptanteSimples(context.Context, *OptanteSimplesData) (*ServiceResponseOptanteSimples, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOptanteSimples not implemented")
}
func (UnimplementedDadosReceitaServiceServer) ListPais(context.Context, *ListCriteriaRequestPais) (*ServiceResponseListPais, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPais not implemented")
}
func (UnimplementedDadosReceitaServiceServer) CreatePais(context.Context, *PaisData) (*ServiceResponsePais, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePais not implemented")
}
func (UnimplementedDadosReceitaServiceServer) ListQualificacaoSocio(context.Context, *ListCriteriaRequestQualificacaoSocio) (*ServiceResponseListQualificacaoSocio, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListQualificacaoSocio not implemented")
}
func (UnimplementedDadosReceitaServiceServer) CreateQualificacaoSocio(context.Context, *QualificacaoSocioData) (*ServiceResponseQualificacaoSocio, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQualificacaoSocio not implemented")
}
func (UnimplementedDadosReceitaServiceServer) ListSocio(context.Context, *ListCriteriaRequestSocio) (*ServiceResponseListSocio, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSocio not implemented")
}
func (UnimplementedDadosReceitaServiceServer) CreateSocio(context.Context, *SocioData) (*ServiceResponseSocio, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSocio not implemented")
}
func (UnimplementedDadosReceitaServiceServer) mustEmbedUnimplementedDadosReceitaServiceServer() {}

// UnsafeDadosReceitaServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DadosReceitaServiceServer will
// result in compilation errors.
type UnsafeDadosReceitaServiceServer interface {
	mustEmbedUnimplementedDadosReceitaServiceServer()
}

func RegisterDadosReceitaServiceServer(s grpc.ServiceRegistrar, srv DadosReceitaServiceServer) {
	s.RegisterService(&DadosReceitaService_ServiceDesc, srv)
}

func _DadosReceitaService_ProcessImport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithoutParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).ProcessImport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_ProcessImport_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).ProcessImport(ctx, req.(*WithoutParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_ListCnpjEmpresa_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCriteriaRequestCnpjEmpresa)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).ListCnpjEmpresa(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_ListCnpjEmpresa_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).ListCnpjEmpresa(ctx, req.(*ListCriteriaRequestCnpjEmpresa))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_ListSocioEmpresa_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCriteriaRequestSocioEmpresa)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).ListSocioEmpresa(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_ListSocioEmpresa_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).ListSocioEmpresa(ctx, req.(*ListCriteriaRequestSocioEmpresa))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_ListCnae_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCriteriaRequestCnae)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).ListCnae(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_ListCnae_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).ListCnae(ctx, req.(*ListCriteriaRequestCnae))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_CreateCnae_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CnaeData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).CreateCnae(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_CreateCnae_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).CreateCnae(ctx, req.(*CnaeData))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_ListEmpresa_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCriteriaRequestEmpresa)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).ListEmpresa(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_ListEmpresa_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).ListEmpresa(ctx, req.(*ListCriteriaRequestEmpresa))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_CreateEmpresa_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmpresaData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).CreateEmpresa(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_CreateEmpresa_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).CreateEmpresa(ctx, req.(*EmpresaData))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_ListEstabelecimento_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCriteriaRequestEstabelecimento)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).ListEstabelecimento(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_ListEstabelecimento_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).ListEstabelecimento(ctx, req.(*ListCriteriaRequestEstabelecimento))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_CreateEstabelecimento_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EstabelecimentoData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).CreateEstabelecimento(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_CreateEstabelecimento_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).CreateEstabelecimento(ctx, req.(*EstabelecimentoData))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_ListMotivoSituacaoCadastral_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCriteriaRequestMotivoSituacaoCadastral)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).ListMotivoSituacaoCadastral(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_ListMotivoSituacaoCadastral_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).ListMotivoSituacaoCadastral(ctx, req.(*ListCriteriaRequestMotivoSituacaoCadastral))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_CreateMotivoSituacaoCadastral_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MotivoSituacaoCadastralData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).CreateMotivoSituacaoCadastral(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_CreateMotivoSituacaoCadastral_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).CreateMotivoSituacaoCadastral(ctx, req.(*MotivoSituacaoCadastralData))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_ListMunicipio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCriteriaRequestMunicipio)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).ListMunicipio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_ListMunicipio_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).ListMunicipio(ctx, req.(*ListCriteriaRequestMunicipio))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_CreateMunicipio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MunicipioData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).CreateMunicipio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_CreateMunicipio_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).CreateMunicipio(ctx, req.(*MunicipioData))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_ListNaturezaJuridica_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCriteriaRequestNaturezaJuridica)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).ListNaturezaJuridica(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_ListNaturezaJuridica_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).ListNaturezaJuridica(ctx, req.(*ListCriteriaRequestNaturezaJuridica))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_CreateNaturezaJuridica_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NaturezaJuridicaData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).CreateNaturezaJuridica(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_CreateNaturezaJuridica_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).CreateNaturezaJuridica(ctx, req.(*NaturezaJuridicaData))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_ListOptanteSimples_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCriteriaRequestOptanteSimples)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).ListOptanteSimples(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_ListOptanteSimples_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).ListOptanteSimples(ctx, req.(*ListCriteriaRequestOptanteSimples))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_CreateOptanteSimples_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OptanteSimplesData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).CreateOptanteSimples(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_CreateOptanteSimples_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).CreateOptanteSimples(ctx, req.(*OptanteSimplesData))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_ListPais_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCriteriaRequestPais)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).ListPais(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_ListPais_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).ListPais(ctx, req.(*ListCriteriaRequestPais))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_CreatePais_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaisData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).CreatePais(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_CreatePais_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).CreatePais(ctx, req.(*PaisData))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_ListQualificacaoSocio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCriteriaRequestQualificacaoSocio)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).ListQualificacaoSocio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_ListQualificacaoSocio_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).ListQualificacaoSocio(ctx, req.(*ListCriteriaRequestQualificacaoSocio))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_CreateQualificacaoSocio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QualificacaoSocioData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).CreateQualificacaoSocio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_CreateQualificacaoSocio_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).CreateQualificacaoSocio(ctx, req.(*QualificacaoSocioData))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_ListSocio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCriteriaRequestSocio)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).ListSocio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_ListSocio_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).ListSocio(ctx, req.(*ListCriteriaRequestSocio))
	}
	return interceptor(ctx, in, info, handler)
}

func _DadosReceitaService_CreateSocio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SocioData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DadosReceitaServiceServer).CreateSocio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DadosReceitaService_CreateSocio_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DadosReceitaServiceServer).CreateSocio(ctx, req.(*SocioData))
	}
	return interceptor(ctx, in, info, handler)
}

// DadosReceitaService_ServiceDesc is the grpc.ServiceDesc for DadosReceitaService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DadosReceitaService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.receita.DadosReceitaService",
	HandlerType: (*DadosReceitaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "processImport",
			Handler:    _DadosReceitaService_ProcessImport_Handler,
		},
		{
			MethodName: "listCnpjEmpresa",
			Handler:    _DadosReceitaService_ListCnpjEmpresa_Handler,
		},
		{
			MethodName: "listSocioEmpresa",
			Handler:    _DadosReceitaService_ListSocioEmpresa_Handler,
		},
		{
			MethodName: "listCnae",
			Handler:    _DadosReceitaService_ListCnae_Handler,
		},
		{
			MethodName: "createCnae",
			Handler:    _DadosReceitaService_CreateCnae_Handler,
		},
		{
			MethodName: "listEmpresa",
			Handler:    _DadosReceitaService_ListEmpresa_Handler,
		},
		{
			MethodName: "createEmpresa",
			Handler:    _DadosReceitaService_CreateEmpresa_Handler,
		},
		{
			MethodName: "listEstabelecimento",
			Handler:    _DadosReceitaService_ListEstabelecimento_Handler,
		},
		{
			MethodName: "createEstabelecimento",
			Handler:    _DadosReceitaService_CreateEstabelecimento_Handler,
		},
		{
			MethodName: "listMotivoSituacaoCadastral",
			Handler:    _DadosReceitaService_ListMotivoSituacaoCadastral_Handler,
		},
		{
			MethodName: "createMotivoSituacaoCadastral",
			Handler:    _DadosReceitaService_CreateMotivoSituacaoCadastral_Handler,
		},
		{
			MethodName: "listMunicipio",
			Handler:    _DadosReceitaService_ListMunicipio_Handler,
		},
		{
			MethodName: "createMunicipio",
			Handler:    _DadosReceitaService_CreateMunicipio_Handler,
		},
		{
			MethodName: "listNaturezaJuridica",
			Handler:    _DadosReceitaService_ListNaturezaJuridica_Handler,
		},
		{
			MethodName: "createNaturezaJuridica",
			Handler:    _DadosReceitaService_CreateNaturezaJuridica_Handler,
		},
		{
			MethodName: "listOptanteSimples",
			Handler:    _DadosReceitaService_ListOptanteSimples_Handler,
		},
		{
			MethodName: "createOptanteSimples",
			Handler:    _DadosReceitaService_CreateOptanteSimples_Handler,
		},
		{
			MethodName: "listPais",
			Handler:    _DadosReceitaService_ListPais_Handler,
		},
		{
			MethodName: "createPais",
			Handler:    _DadosReceitaService_CreatePais_Handler,
		},
		{
			MethodName: "listQualificacaoSocio",
			Handler:    _DadosReceitaService_ListQualificacaoSocio_Handler,
		},
		{
			MethodName: "createQualificacaoSocio",
			Handler:    _DadosReceitaService_CreateQualificacaoSocio_Handler,
		},
		{
			MethodName: "listSocio",
			Handler:    _DadosReceitaService_ListSocio_Handler,
		},
		{
			MethodName: "createSocio",
			Handler:    _DadosReceitaService_CreateSocio_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/dados-receita.proto",
}
