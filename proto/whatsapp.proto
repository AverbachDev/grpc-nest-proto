syntax = "proto3";

package whatsapp;


service WhatsappService {

    //WhatsApp

    rpc sendMessage (SendMessageRequestData) returns (ServiceResponseWhatsApp) {}
    rpc sendFile (SendFileRequestData) returns (ServiceResponseWhatsApp) {}
    rpc SendFilePath (SendFilePathRequestData) returns (ServiceResponseWhatsApp) {}

    //ChatWhatsDevedor
    rpc listChatWhatsDevedor (ListCriteriaRequestChatWhatsDevedor) returns (ServiceResponseListChatWhatsDevedor) {}
    rpc findOneChatWhatsDevedor (IdRequest) returns (ServiceResponseChatWhatsDevedor) {}
    rpc createChatWhatsDevedor (ChatWhatsDevedorData) returns (ServiceResponseChatWhatsDevedor) {}
    rpc updateChatWhatsDevedor (ChatWhatsDevedorUpdateRequest) returns (ServiceResponseChatWhatsDevedor) {}
    rpc removeChatWhatsDevedor (IdRequest) returns (ServiceResponseChatWhatsDevedor) {}
    rpc listChatsToStoreReactWhatsDevedor (ListCriteriaRequestChatWhatsDevedor) returns (ServiceResponseListChatWhatsDevedor) {}

    //MensagemChatWhats
    rpc listMensagemChatWhats (ListCriteriaRequestMensagemChatWhats) returns (ServiceResponseListMensagemChatWhats) {}
    rpc findOneMensagemChatWhats (IdRequest) returns (ServiceResponseMensagemChatWhats) {}
    rpc createMensagemChatWhats (MensagemChatWhatsData) returns (ServiceResponseMensagemChatWhats) {}
    rpc updateMensagemChatWhats (MensagemChatWhatsUpdateRequest) returns (ServiceResponseMensagemChatWhats) {}
    rpc removeMensagemChatWhats (IdRequest) returns (ServiceResponseMensagemChatWhats) {}

}

message IdRequest{
    int32 id = 1;
}


//WhatsApp

message Contact {
    string formattedName = 1;
    string id = 2;
    bool isBusiness = 3;
    bool isEnterprise = 4;
    bool isMe = 5;
    bool isMyContact = 6;
    bool isPSA = 7;
    bool isUser = 8;
    bool isVerified = 9;
    bool isWAContact = 10;
    repeated Message msgs = 11;
    /**
     * Name of concat in your agenda
     */
    string name = 13;
    bool plaintextDisabled = 14;
    string pushname = 15;
    string sectionHeader = 16;
    string shortName = 17;
    bool statusMute = 18;
    string type = 19;
}


message MessageId {
    bool fromMe = 1;
    string id = 2;
    Wid remote =3;
    string _serialized = 4;
}

message Message{
    string id = 1;
    string body = 2;
    string type = 3;
    string subtype = 4;
    int64 t = 5;
    string notifyName = 6;
    string from = 7;
    string to = 8;
    string author = 9;
    string self = 10;
    int32 ack = 11;
    bool invis = 12;
    bool isNewMsg = 13;
    bool star = 14;
    bool recvFresh = 15;
    string clientUrl = 16;
    string deprecatedMms3Url = 17;
    string directPath = 18;
    string mimetype = 19;
    string filehash = 20;
    string uploadhash = 21;
    int32 size = 22;
    string mediaKey = 23;
    int32 mediaKeyTimestamp = 24;
    int32 width = 25;
    int32 height = 26;
    bool broadcast = 27;
    bool isForwarded = 28;
    Contact sender = 29;
    int64 timestamp = 30;
    string content = 31;
    bool isGroupMsg = 32;
    bool isMMS = 33;
    bool isMedia = 34;
    bool isNotification = 35;
    bool isPSA = 36;
    string chatId = 38;
    string quotedMsgObj = 39;
    string quotedMsgId = 40;
    MediaData mediaData = 41;
    repeated string recipients = 42;
    bool fromMe = 43;
}

message MediaData{
    string type = 1;
    string mediaStage = 2;
    int32 animationDuration = 3;
    bool animatedAsNewMsg = 4;
    bool _swStreamingSupported = 5;
    bool _listeningToSwSupport = 6;
}

message  Wid {
    /**
     * "c.us" for contacts
     * "g.us" for groups
     */
    string server = 1;
    /**
     * number of contact or group
     */
    string user = 2;
    /**
     * user@server
     */
    string _serialized = 3;
}

message SendMessageRequestData {
    string session = 1;
    string phone = 2;
    string body = 3;
}

message SendFileRequestData {
    string session = 1;
    string phone = 2;
    string body = 3;
    string filename = 4;
}

message SendFilePathRequestData {
    string session = 1;
    string phone = 2;
    string body = 3;
    string filename = 4;
    string message = 5;
}

message ServiceResponseWhatsApp {
    int32 status = 1;
    string message = 2;
    Message data = 3;
    string error = 4;
}

//ChatWhatsDevedor

message ListCriteriaRequestChatWhatsDevedor {
    int32 idDevedor = 1;
    string deDddCelular = 2; 
    string deCelular = 3;
    string deChatId = 4;
    string nmUsuarioChat = 5;
    string deInstanceId = 6;
    string dtAtividade = 7;
    string dtAtividadeParceiro = 8;
    int32 cdEmpresa = 9;
    int32 items = 10;
    int32 page = 11;
    map<string, string> order =12;
}

message ChatWhatsDevedorData {
    int32 idChatDevedor = 1;
    string deDddCelular = 2;
    string deCelular = 3;
    string deChatId = 4;
    string nmUsuarioChat = 5;
    string deInstanceId = 6;
    string dtAtividade = 7;
    bool cdNovaMensagem = 8;
    bool cdNovoAck = 9;
    bool cdNaoLida = 10;
    bool cdNaoLidaCobrador = 11;
    int32 cdEmpresa = 12;
    bool cdNaoLidaParceiro = 13;
    string dtAtividadeParceiro = 14;
    bool cdNovaMensagemParceiro = 15;
    int32 idUsuaOper = 16;
    string dtRegistro = 17;
    string createdDate = 18;
    string updatedDate = 19;
    string deletedDate = 20;
    int32 idDevedor = 21;
    repeated MensagemChatWhatsData mensagemChatWhats =22;
}

message ChatWhatsDevedorUpdateRequest{
    int32 id = 1;
    ChatWhatsDevedorData chatWhatsDevedor = 2;
}

message ServiceResponseChatWhatsDevedor {
    int32 status = 1;
    string message = 2;
    repeated ChatWhatsDevedorData data = 3;
    string error = 4;
}

message ServiceResponseListChatWhatsDevedor {
    int32 status = 1;
    string message = 2;
    ListResultChatWhatsDevedor data = 3;
    string error = 4;
}

message ListResultChatWhatsDevedor {
    repeated ChatWhatsDevedorData result = 1;
    int32 total = 2;
}


//MensagemChatWhats

message ListCriteriaRequestMensagemChatWhats {
    int32 idChatDevedor = 1;
    string deChatId = 2; 
    string nmArquivo = 3;
    string deMensagem = 4;
    string deMessageId = 5;
    int32 cdEmpresa = 6;    
    int32 items = 7;
    int32 page = 8;
    map<string, string> order =9;
}

message MensagemChatWhatsData {

    int32 idChatMensagem = 1;
    int32 idChatDevedor = 2;
    string deChatId = 3;
    string dtMensagem = 4;
    bool cdEnvioMensagem = 5;
    string deMensagem = 6;
    string cdStatusMensagem = 7;
    string cdTipo = 8;
    string deMessageId = 9;
    string nmArquivo = 10;
    int32 cdEmpresa = 11;
    bool cdAnexoRecebido = 12;
    int32 idUsuaOper = 13;
    string dtRegistro = 14;
    string createdDate = 15;
    string updatedDate = 16;
    string deletedDate = 17;
}

message MensagemChatWhatsUpdateRequest{
    int32 id = 1;
    MensagemChatWhatsData nensagemChatWhats = 2;
}

message ServiceResponseMensagemChatWhats {
    int32 status = 1;
    string message = 2;
    repeated MensagemChatWhatsData data = 3;
    string error = 4;
}

message ServiceResponseListMensagemChatWhats {
    int32 status = 1;
    string message = 2;
    ListResultMensagemChatWhats data = 3;
    string error = 4;
}

message ListResultMensagemChatWhats {
    repeated MensagemChatWhatsData result = 1;
    int32 total = 2;
}