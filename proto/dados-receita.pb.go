// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.22.1
// source: proto/dados-receita.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WithoutParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WithoutParams) Reset() {
	*x = WithoutParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithoutParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithoutParams) ProtoMessage() {}

func (x *WithoutParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithoutParams.ProtoReflect.Descriptor instead.
func (*WithoutParams) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{0}
}

type ServiceResponseProcessImport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *WithoutParams `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   string         `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseProcessImport) Reset() {
	*x = ServiceResponseProcessImport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseProcessImport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseProcessImport) ProtoMessage() {}

func (x *ServiceResponseProcessImport) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseProcessImport.ProtoReflect.Descriptor instead.
func (*ServiceResponseProcessImport) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceResponseProcessImport) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseProcessImport) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseProcessImport) GetData() *WithoutParams {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseProcessImport) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListCriteriaRequestCnpjEmpresa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CdCnpjCpf string            `protobuf:"bytes,1,opt,name=cdCnpjCpf,proto3" json:"cdCnpjCpf,omitempty"`
	Items     int32             `protobuf:"varint,2,opt,name=items,proto3" json:"items,omitempty"`
	Page      int32             `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Order     map[string]string `protobuf:"bytes,4,rep,name=order,proto3" json:"order,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListCriteriaRequestCnpjEmpresa) Reset() {
	*x = ListCriteriaRequestCnpjEmpresa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCriteriaRequestCnpjEmpresa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCriteriaRequestCnpjEmpresa) ProtoMessage() {}

func (x *ListCriteriaRequestCnpjEmpresa) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCriteriaRequestCnpjEmpresa.ProtoReflect.Descriptor instead.
func (*ListCriteriaRequestCnpjEmpresa) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{2}
}

func (x *ListCriteriaRequestCnpjEmpresa) GetCdCnpjCpf() string {
	if x != nil {
		return x.CdCnpjCpf
	}
	return ""
}

func (x *ListCriteriaRequestCnpjEmpresa) GetItems() int32 {
	if x != nil {
		return x.Items
	}
	return 0
}

func (x *ListCriteriaRequestCnpjEmpresa) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCriteriaRequestCnpjEmpresa) GetOrder() map[string]string {
	if x != nil {
		return x.Order
	}
	return nil
}

type CnpjEmpresaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RazaoSocial             string `protobuf:"bytes,1,opt,name=razaoSocial,proto3" json:"razaoSocial,omitempty"`
	IdEmpresa               string `protobuf:"bytes,2,opt,name=idEmpresa,proto3" json:"idEmpresa,omitempty"`
	Subsidiaria             string `protobuf:"bytes,3,opt,name=subsidiaria,proto3" json:"subsidiaria,omitempty"`
	CodigoVerificador       string `protobuf:"bytes,4,opt,name=codigoVerificador,proto3" json:"codigoVerificador,omitempty"`
	Cnpj                    string `protobuf:"bytes,5,opt,name=cnpj,proto3" json:"cnpj,omitempty"`
	MatrizFilial            string `protobuf:"bytes,6,opt,name=matrizFilial,proto3" json:"matrizFilial,omitempty"`
	Fantasia                string `protobuf:"bytes,7,opt,name=fantasia,proto3" json:"fantasia,omitempty"`
	SituacaoCadastral       string `protobuf:"bytes,8,opt,name=situacaoCadastral,proto3" json:"situacaoCadastral,omitempty"`
	DataSituacaoCadastral   string `protobuf:"bytes,9,opt,name=dataSituacaoCadastral,proto3" json:"dataSituacaoCadastral,omitempty"`
	MotivoSituacaoCadastral string `protobuf:"bytes,10,opt,name=motivoSituacaoCadastral,proto3" json:"motivoSituacaoCadastral,omitempty"`
	DataAbertura            string `protobuf:"bytes,11,opt,name=dataAbertura,proto3" json:"dataAbertura,omitempty"`
	CnaePrincipal           string `protobuf:"bytes,12,opt,name=cnaePrincipal,proto3" json:"cnaePrincipal,omitempty"`
	CnaeSecundaria          string `protobuf:"bytes,13,opt,name=cnaeSecundaria,proto3" json:"cnaeSecundaria,omitempty"`
	EnderecoTipoLogradouro  string `protobuf:"bytes,14,opt,name=enderecoTipoLogradouro,proto3" json:"enderecoTipoLogradouro,omitempty"`
	EnderecoLogradouro      string `protobuf:"bytes,15,opt,name=enderecoLogradouro,proto3" json:"enderecoLogradouro,omitempty"`
	EnderecoNumero          string `protobuf:"bytes,16,opt,name=enderecoNumero,proto3" json:"enderecoNumero,omitempty"`
	EnderecoComplemento     string `protobuf:"bytes,17,opt,name=enderecoComplemento,proto3" json:"enderecoComplemento,omitempty"`
	EnderecoBairro          string `protobuf:"bytes,18,opt,name=enderecoBairro,proto3" json:"enderecoBairro,omitempty"`
	EnderecoCep             string `protobuf:"bytes,19,opt,name=enderecoCep,proto3" json:"enderecoCep,omitempty"`
	EnderecoUf              string `protobuf:"bytes,20,opt,name=enderecoUf,proto3" json:"enderecoUf,omitempty"`
	EnderecoCodigoMunicipio string `protobuf:"bytes,21,opt,name=enderecoCodigoMunicipio,proto3" json:"enderecoCodigoMunicipio,omitempty"`
	Telefone1Ddd            string `protobuf:"bytes,22,opt,name=telefone1Ddd,proto3" json:"telefone1Ddd,omitempty"`
	Telefone1Numero         string `protobuf:"bytes,23,opt,name=telefone1Numero,proto3" json:"telefone1Numero,omitempty"`
	Telefone2Ddd            string `protobuf:"bytes,24,opt,name=telefone2Ddd,proto3" json:"telefone2Ddd,omitempty"`
	Telefone2Numero         string `protobuf:"bytes,25,opt,name=telefone2Numero,proto3" json:"telefone2Numero,omitempty"`
	FaxDdd                  string `protobuf:"bytes,26,opt,name=faxDdd,proto3" json:"faxDdd,omitempty"`
	FaxNumero               string `protobuf:"bytes,27,opt,name=faxNumero,proto3" json:"faxNumero,omitempty"`
	Email                   string `protobuf:"bytes,28,opt,name=email,proto3" json:"email,omitempty"`
	Id                      string `protobuf:"bytes,29,opt,name=id,proto3" json:"id,omitempty"`
	NomeMunicipio           string `protobuf:"bytes,30,opt,name=nomeMunicipio,proto3" json:"nomeMunicipio,omitempty"`
}

func (x *CnpjEmpresaData) Reset() {
	*x = CnpjEmpresaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CnpjEmpresaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CnpjEmpresaData) ProtoMessage() {}

func (x *CnpjEmpresaData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CnpjEmpresaData.ProtoReflect.Descriptor instead.
func (*CnpjEmpresaData) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{3}
}

func (x *CnpjEmpresaData) GetRazaoSocial() string {
	if x != nil {
		return x.RazaoSocial
	}
	return ""
}

func (x *CnpjEmpresaData) GetIdEmpresa() string {
	if x != nil {
		return x.IdEmpresa
	}
	return ""
}

func (x *CnpjEmpresaData) GetSubsidiaria() string {
	if x != nil {
		return x.Subsidiaria
	}
	return ""
}

func (x *CnpjEmpresaData) GetCodigoVerificador() string {
	if x != nil {
		return x.CodigoVerificador
	}
	return ""
}

func (x *CnpjEmpresaData) GetCnpj() string {
	if x != nil {
		return x.Cnpj
	}
	return ""
}

func (x *CnpjEmpresaData) GetMatrizFilial() string {
	if x != nil {
		return x.MatrizFilial
	}
	return ""
}

func (x *CnpjEmpresaData) GetFantasia() string {
	if x != nil {
		return x.Fantasia
	}
	return ""
}

func (x *CnpjEmpresaData) GetSituacaoCadastral() string {
	if x != nil {
		return x.SituacaoCadastral
	}
	return ""
}

func (x *CnpjEmpresaData) GetDataSituacaoCadastral() string {
	if x != nil {
		return x.DataSituacaoCadastral
	}
	return ""
}

func (x *CnpjEmpresaData) GetMotivoSituacaoCadastral() string {
	if x != nil {
		return x.MotivoSituacaoCadastral
	}
	return ""
}

func (x *CnpjEmpresaData) GetDataAbertura() string {
	if x != nil {
		return x.DataAbertura
	}
	return ""
}

func (x *CnpjEmpresaData) GetCnaePrincipal() string {
	if x != nil {
		return x.CnaePrincipal
	}
	return ""
}

func (x *CnpjEmpresaData) GetCnaeSecundaria() string {
	if x != nil {
		return x.CnaeSecundaria
	}
	return ""
}

func (x *CnpjEmpresaData) GetEnderecoTipoLogradouro() string {
	if x != nil {
		return x.EnderecoTipoLogradouro
	}
	return ""
}

func (x *CnpjEmpresaData) GetEnderecoLogradouro() string {
	if x != nil {
		return x.EnderecoLogradouro
	}
	return ""
}

func (x *CnpjEmpresaData) GetEnderecoNumero() string {
	if x != nil {
		return x.EnderecoNumero
	}
	return ""
}

func (x *CnpjEmpresaData) GetEnderecoComplemento() string {
	if x != nil {
		return x.EnderecoComplemento
	}
	return ""
}

func (x *CnpjEmpresaData) GetEnderecoBairro() string {
	if x != nil {
		return x.EnderecoBairro
	}
	return ""
}

func (x *CnpjEmpresaData) GetEnderecoCep() string {
	if x != nil {
		return x.EnderecoCep
	}
	return ""
}

func (x *CnpjEmpresaData) GetEnderecoUf() string {
	if x != nil {
		return x.EnderecoUf
	}
	return ""
}

func (x *CnpjEmpresaData) GetEnderecoCodigoMunicipio() string {
	if x != nil {
		return x.EnderecoCodigoMunicipio
	}
	return ""
}

func (x *CnpjEmpresaData) GetTelefone1Ddd() string {
	if x != nil {
		return x.Telefone1Ddd
	}
	return ""
}

func (x *CnpjEmpresaData) GetTelefone1Numero() string {
	if x != nil {
		return x.Telefone1Numero
	}
	return ""
}

func (x *CnpjEmpresaData) GetTelefone2Ddd() string {
	if x != nil {
		return x.Telefone2Ddd
	}
	return ""
}

func (x *CnpjEmpresaData) GetTelefone2Numero() string {
	if x != nil {
		return x.Telefone2Numero
	}
	return ""
}

func (x *CnpjEmpresaData) GetFaxDdd() string {
	if x != nil {
		return x.FaxDdd
	}
	return ""
}

func (x *CnpjEmpresaData) GetFaxNumero() string {
	if x != nil {
		return x.FaxNumero
	}
	return ""
}

func (x *CnpjEmpresaData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CnpjEmpresaData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CnpjEmpresaData) GetNomeMunicipio() string {
	if x != nil {
		return x.NomeMunicipio
	}
	return ""
}

type ListResultCnpjEmpresaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*CnpjEmpresaData `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	Total  int32              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListResultCnpjEmpresaData) Reset() {
	*x = ListResultCnpjEmpresaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResultCnpjEmpresaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResultCnpjEmpresaData) ProtoMessage() {}

func (x *ListResultCnpjEmpresaData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResultCnpjEmpresaData.ProtoReflect.Descriptor instead.
func (*ListResultCnpjEmpresaData) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{4}
}

func (x *ListResultCnpjEmpresaData) GetResult() []*CnpjEmpresaData {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListResultCnpjEmpresaData) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ServiceResponseListCnpjEmpresa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                      `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ListResultCnpjEmpresaData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   string                     `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseListCnpjEmpresa) Reset() {
	*x = ServiceResponseListCnpjEmpresa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseListCnpjEmpresa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseListCnpjEmpresa) ProtoMessage() {}

func (x *ServiceResponseListCnpjEmpresa) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseListCnpjEmpresa.ProtoReflect.Descriptor instead.
func (*ServiceResponseListCnpjEmpresa) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{5}
}

func (x *ServiceResponseListCnpjEmpresa) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseListCnpjEmpresa) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseListCnpjEmpresa) GetData() *ListResultCnpjEmpresaData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseListCnpjEmpresa) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ServiceResponseCnpjEmpresa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32              `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*CnpjEmpresaData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   string             `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseCnpjEmpresa) Reset() {
	*x = ServiceResponseCnpjEmpresa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseCnpjEmpresa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseCnpjEmpresa) ProtoMessage() {}

func (x *ServiceResponseCnpjEmpresa) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseCnpjEmpresa.ProtoReflect.Descriptor instead.
func (*ServiceResponseCnpjEmpresa) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{6}
}

func (x *ServiceResponseCnpjEmpresa) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseCnpjEmpresa) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseCnpjEmpresa) GetData() []*CnpjEmpresaData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseCnpjEmpresa) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Cnae
type ListCriteriaRequestCnae struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cnae      string            `protobuf:"bytes,1,opt,name=cnae,proto3" json:"cnae,omitempty"`
	Descricao string            `protobuf:"bytes,2,opt,name=descricao,proto3" json:"descricao,omitempty"`
	Items     int32             `protobuf:"varint,3,opt,name=items,proto3" json:"items,omitempty"`
	Page      int32             `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Order     map[string]string `protobuf:"bytes,5,rep,name=order,proto3" json:"order,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListCriteriaRequestCnae) Reset() {
	*x = ListCriteriaRequestCnae{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCriteriaRequestCnae) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCriteriaRequestCnae) ProtoMessage() {}

func (x *ListCriteriaRequestCnae) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCriteriaRequestCnae.ProtoReflect.Descriptor instead.
func (*ListCriteriaRequestCnae) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{7}
}

func (x *ListCriteriaRequestCnae) GetCnae() string {
	if x != nil {
		return x.Cnae
	}
	return ""
}

func (x *ListCriteriaRequestCnae) GetDescricao() string {
	if x != nil {
		return x.Descricao
	}
	return ""
}

func (x *ListCriteriaRequestCnae) GetItems() int32 {
	if x != nil {
		return x.Items
	}
	return 0
}

func (x *ListCriteriaRequestCnae) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCriteriaRequestCnae) GetOrder() map[string]string {
	if x != nil {
		return x.Order
	}
	return nil
}

type CnaeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cnae      string `protobuf:"bytes,1,opt,name=cnae,proto3" json:"cnae,omitempty"`
	Descricao string `protobuf:"bytes,2,opt,name=descricao,proto3" json:"descricao,omitempty"`
}

func (x *CnaeData) Reset() {
	*x = CnaeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CnaeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CnaeData) ProtoMessage() {}

func (x *CnaeData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CnaeData.ProtoReflect.Descriptor instead.
func (*CnaeData) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{8}
}

func (x *CnaeData) GetCnae() string {
	if x != nil {
		return x.Cnae
	}
	return ""
}

func (x *CnaeData) GetDescricao() string {
	if x != nil {
		return x.Descricao
	}
	return ""
}

type ServiceResponseCnae struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*CnaeData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   string      `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseCnae) Reset() {
	*x = ServiceResponseCnae{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseCnae) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseCnae) ProtoMessage() {}

func (x *ServiceResponseCnae) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseCnae.ProtoReflect.Descriptor instead.
func (*ServiceResponseCnae) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{9}
}

func (x *ServiceResponseCnae) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseCnae) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseCnae) GetData() []*CnaeData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseCnae) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ServiceResponseListCnae struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ListResultCnae `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   string          `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseListCnae) Reset() {
	*x = ServiceResponseListCnae{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseListCnae) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseListCnae) ProtoMessage() {}

func (x *ServiceResponseListCnae) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseListCnae.ProtoReflect.Descriptor instead.
func (*ServiceResponseListCnae) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{10}
}

func (x *ServiceResponseListCnae) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseListCnae) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseListCnae) GetData() *ListResultCnae {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseListCnae) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListResultCnae struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*CnaeData `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	Total  int32       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListResultCnae) Reset() {
	*x = ListResultCnae{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResultCnae) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResultCnae) ProtoMessage() {}

func (x *ListResultCnae) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResultCnae.ProtoReflect.Descriptor instead.
func (*ListResultCnae) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{11}
}

func (x *ListResultCnae) GetResult() []*CnaeData {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListResultCnae) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Empresa
type ListCriteriaRequestEmpresa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RazaoSocial string            `protobuf:"bytes,2,opt,name=razaoSocial,proto3" json:"razaoSocial,omitempty"`
	Items       int32             `protobuf:"varint,3,opt,name=items,proto3" json:"items,omitempty"`
	Page        int32             `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Order       map[string]string `protobuf:"bytes,5,rep,name=order,proto3" json:"order,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListCriteriaRequestEmpresa) Reset() {
	*x = ListCriteriaRequestEmpresa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCriteriaRequestEmpresa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCriteriaRequestEmpresa) ProtoMessage() {}

func (x *ListCriteriaRequestEmpresa) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCriteriaRequestEmpresa.ProtoReflect.Descriptor instead.
func (*ListCriteriaRequestEmpresa) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{12}
}

func (x *ListCriteriaRequestEmpresa) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListCriteriaRequestEmpresa) GetRazaoSocial() string {
	if x != nil {
		return x.RazaoSocial
	}
	return ""
}

func (x *ListCriteriaRequestEmpresa) GetItems() int32 {
	if x != nil {
		return x.Items
	}
	return 0
}

func (x *ListCriteriaRequestEmpresa) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCriteriaRequestEmpresa) GetOrder() map[string]string {
	if x != nil {
		return x.Order
	}
	return nil
}

type EmpresaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RazaoSocial             string `protobuf:"bytes,2,opt,name=razaoSocial,proto3" json:"razaoSocial,omitempty"`
	CodigoNaturezaJuridica  string `protobuf:"bytes,3,opt,name=codigoNaturezaJuridica,proto3" json:"codigoNaturezaJuridica,omitempty"`
	QualificacaoResponsavel string `protobuf:"bytes,4,opt,name=qualificacaoResponsavel,proto3" json:"qualificacaoResponsavel,omitempty"`
	CapitalSocial           string `protobuf:"bytes,5,opt,name=capitalSocial,proto3" json:"capitalSocial,omitempty"`
	Porte                   int32  `protobuf:"varint,6,opt,name=porte,proto3" json:"porte,omitempty"`
}

func (x *EmpresaData) Reset() {
	*x = EmpresaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmpresaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmpresaData) ProtoMessage() {}

func (x *EmpresaData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmpresaData.ProtoReflect.Descriptor instead.
func (*EmpresaData) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{13}
}

func (x *EmpresaData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EmpresaData) GetRazaoSocial() string {
	if x != nil {
		return x.RazaoSocial
	}
	return ""
}

func (x *EmpresaData) GetCodigoNaturezaJuridica() string {
	if x != nil {
		return x.CodigoNaturezaJuridica
	}
	return ""
}

func (x *EmpresaData) GetQualificacaoResponsavel() string {
	if x != nil {
		return x.QualificacaoResponsavel
	}
	return ""
}

func (x *EmpresaData) GetCapitalSocial() string {
	if x != nil {
		return x.CapitalSocial
	}
	return ""
}

func (x *EmpresaData) GetPorte() int32 {
	if x != nil {
		return x.Porte
	}
	return 0
}

type ServiceResponseEmpresa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*EmpresaData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   string         `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseEmpresa) Reset() {
	*x = ServiceResponseEmpresa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseEmpresa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseEmpresa) ProtoMessage() {}

func (x *ServiceResponseEmpresa) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseEmpresa.ProtoReflect.Descriptor instead.
func (*ServiceResponseEmpresa) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{14}
}

func (x *ServiceResponseEmpresa) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseEmpresa) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseEmpresa) GetData() []*EmpresaData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseEmpresa) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ServiceResponseListEmpresa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32              `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ListResultEmpresa `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   string             `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseListEmpresa) Reset() {
	*x = ServiceResponseListEmpresa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseListEmpresa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseListEmpresa) ProtoMessage() {}

func (x *ServiceResponseListEmpresa) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseListEmpresa.ProtoReflect.Descriptor instead.
func (*ServiceResponseListEmpresa) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{15}
}

func (x *ServiceResponseListEmpresa) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseListEmpresa) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseListEmpresa) GetData() *ListResultEmpresa {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseListEmpresa) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListResultEmpresa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*EmpresaData `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	Total  int32          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListResultEmpresa) Reset() {
	*x = ListResultEmpresa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResultEmpresa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResultEmpresa) ProtoMessage() {}

func (x *ListResultEmpresa) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResultEmpresa.ProtoReflect.Descriptor instead.
func (*ListResultEmpresa) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{16}
}

func (x *ListResultEmpresa) GetResult() []*EmpresaData {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListResultEmpresa) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Estabelecimento
type ListCriteriaRequestEstabelecimento struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cnpj     string            `protobuf:"bytes,1,opt,name=cnpj,proto3" json:"cnpj,omitempty"`
	Fantasia string            `protobuf:"bytes,2,opt,name=fantasia,proto3" json:"fantasia,omitempty"`
	Items    int32             `protobuf:"varint,3,opt,name=items,proto3" json:"items,omitempty"`
	Page     int32             `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Order    map[string]string `protobuf:"bytes,5,rep,name=order,proto3" json:"order,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListCriteriaRequestEstabelecimento) Reset() {
	*x = ListCriteriaRequestEstabelecimento{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCriteriaRequestEstabelecimento) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCriteriaRequestEstabelecimento) ProtoMessage() {}

func (x *ListCriteriaRequestEstabelecimento) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCriteriaRequestEstabelecimento.ProtoReflect.Descriptor instead.
func (*ListCriteriaRequestEstabelecimento) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{17}
}

func (x *ListCriteriaRequestEstabelecimento) GetCnpj() string {
	if x != nil {
		return x.Cnpj
	}
	return ""
}

func (x *ListCriteriaRequestEstabelecimento) GetFantasia() string {
	if x != nil {
		return x.Fantasia
	}
	return ""
}

func (x *ListCriteriaRequestEstabelecimento) GetItems() int32 {
	if x != nil {
		return x.Items
	}
	return 0
}

func (x *ListCriteriaRequestEstabelecimento) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCriteriaRequestEstabelecimento) GetOrder() map[string]string {
	if x != nil {
		return x.Order
	}
	return nil
}

type EstabelecimentoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdEmpresa               string `protobuf:"bytes,1,opt,name=idEmpresa,proto3" json:"idEmpresa,omitempty"`
	Subsidiaria             string `protobuf:"bytes,2,opt,name=subsidiaria,proto3" json:"subsidiaria,omitempty"`
	CodigoVerificador       string `protobuf:"bytes,3,opt,name=codigoVerificador,proto3" json:"codigoVerificador,omitempty"`
	Cnpj                    string `protobuf:"bytes,4,opt,name=cnpj,proto3" json:"cnpj,omitempty"`
	MatrizFilial            bool   `protobuf:"varint,5,opt,name=matrizFilial,proto3" json:"matrizFilial,omitempty"`
	Fantasia                string `protobuf:"bytes,6,opt,name=fantasia,proto3" json:"fantasia,omitempty"`
	SituacaoCadastral       string `protobuf:"bytes,7,opt,name=situacaoCadastral,proto3" json:"situacaoCadastral,omitempty"`
	DataSituacaoCadastral   string `protobuf:"bytes,8,opt,name=dataSituacaoCadastral,proto3" json:"dataSituacaoCadastral,omitempty"`
	MotivoSituacaoCadastral string `protobuf:"bytes,9,opt,name=motivoSituacaoCadastral,proto3" json:"motivoSituacaoCadastral,omitempty"`
	DataAbertura            string `protobuf:"bytes,10,opt,name=dataAbertura,proto3" json:"dataAbertura,omitempty"`
	CnaePrincipal           string `protobuf:"bytes,11,opt,name=cnaePrincipal,proto3" json:"cnaePrincipal,omitempty"`
	CnaeSecundaria          string `protobuf:"bytes,12,opt,name=cnaeSecundaria,proto3" json:"cnaeSecundaria,omitempty"`
	EnderecoTipoLogradouro  string `protobuf:"bytes,13,opt,name=enderecoTipoLogradouro,proto3" json:"enderecoTipoLogradouro,omitempty"`
	EnderecoLogradouro      string `protobuf:"bytes,14,opt,name=enderecoLogradouro,proto3" json:"enderecoLogradouro,omitempty"`
	EnderecoNumero          string `protobuf:"bytes,15,opt,name=enderecoNumero,proto3" json:"enderecoNumero,omitempty"`
	EnderecoComplemento     string `protobuf:"bytes,16,opt,name=enderecoComplemento,proto3" json:"enderecoComplemento,omitempty"`
	EnderecoBairro          string `protobuf:"bytes,17,opt,name=enderecoBairro,proto3" json:"enderecoBairro,omitempty"`
	EnderecoCep             string `protobuf:"bytes,18,opt,name=enderecoCep,proto3" json:"enderecoCep,omitempty"`
	EnderecoUf              string `protobuf:"bytes,19,opt,name=enderecoUf,proto3" json:"enderecoUf,omitempty"`
	EnderecoCodigoMunicipio string `protobuf:"bytes,20,opt,name=enderecoCodigoMunicipio,proto3" json:"enderecoCodigoMunicipio,omitempty"`
	Telefone1Ddd            string `protobuf:"bytes,21,opt,name=telefone1Ddd,proto3" json:"telefone1Ddd,omitempty"`
	Telefone1Numero         string `protobuf:"bytes,22,opt,name=telefone1Numero,proto3" json:"telefone1Numero,omitempty"`
	Telefone2Ddd            string `protobuf:"bytes,23,opt,name=telefone2Ddd,proto3" json:"telefone2Ddd,omitempty"`
	Telefone2Numero         string `protobuf:"bytes,24,opt,name=telefone2Numero,proto3" json:"telefone2Numero,omitempty"`
	FaxDdd                  string `protobuf:"bytes,25,opt,name=faxDdd,proto3" json:"faxDdd,omitempty"`
	FaxNumero               string `protobuf:"bytes,26,opt,name=faxNumero,proto3" json:"faxNumero,omitempty"`
	Email                   string `protobuf:"bytes,27,opt,name=email,proto3" json:"email,omitempty"`
	Id                      int32  `protobuf:"varint,28,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EstabelecimentoData) Reset() {
	*x = EstabelecimentoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstabelecimentoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstabelecimentoData) ProtoMessage() {}

func (x *EstabelecimentoData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstabelecimentoData.ProtoReflect.Descriptor instead.
func (*EstabelecimentoData) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{18}
}

func (x *EstabelecimentoData) GetIdEmpresa() string {
	if x != nil {
		return x.IdEmpresa
	}
	return ""
}

func (x *EstabelecimentoData) GetSubsidiaria() string {
	if x != nil {
		return x.Subsidiaria
	}
	return ""
}

func (x *EstabelecimentoData) GetCodigoVerificador() string {
	if x != nil {
		return x.CodigoVerificador
	}
	return ""
}

func (x *EstabelecimentoData) GetCnpj() string {
	if x != nil {
		return x.Cnpj
	}
	return ""
}

func (x *EstabelecimentoData) GetMatrizFilial() bool {
	if x != nil {
		return x.MatrizFilial
	}
	return false
}

func (x *EstabelecimentoData) GetFantasia() string {
	if x != nil {
		return x.Fantasia
	}
	return ""
}

func (x *EstabelecimentoData) GetSituacaoCadastral() string {
	if x != nil {
		return x.SituacaoCadastral
	}
	return ""
}

func (x *EstabelecimentoData) GetDataSituacaoCadastral() string {
	if x != nil {
		return x.DataSituacaoCadastral
	}
	return ""
}

func (x *EstabelecimentoData) GetMotivoSituacaoCadastral() string {
	if x != nil {
		return x.MotivoSituacaoCadastral
	}
	return ""
}

func (x *EstabelecimentoData) GetDataAbertura() string {
	if x != nil {
		return x.DataAbertura
	}
	return ""
}

func (x *EstabelecimentoData) GetCnaePrincipal() string {
	if x != nil {
		return x.CnaePrincipal
	}
	return ""
}

func (x *EstabelecimentoData) GetCnaeSecundaria() string {
	if x != nil {
		return x.CnaeSecundaria
	}
	return ""
}

func (x *EstabelecimentoData) GetEnderecoTipoLogradouro() string {
	if x != nil {
		return x.EnderecoTipoLogradouro
	}
	return ""
}

func (x *EstabelecimentoData) GetEnderecoLogradouro() string {
	if x != nil {
		return x.EnderecoLogradouro
	}
	return ""
}

func (x *EstabelecimentoData) GetEnderecoNumero() string {
	if x != nil {
		return x.EnderecoNumero
	}
	return ""
}

func (x *EstabelecimentoData) GetEnderecoComplemento() string {
	if x != nil {
		return x.EnderecoComplemento
	}
	return ""
}

func (x *EstabelecimentoData) GetEnderecoBairro() string {
	if x != nil {
		return x.EnderecoBairro
	}
	return ""
}

func (x *EstabelecimentoData) GetEnderecoCep() string {
	if x != nil {
		return x.EnderecoCep
	}
	return ""
}

func (x *EstabelecimentoData) GetEnderecoUf() string {
	if x != nil {
		return x.EnderecoUf
	}
	return ""
}

func (x *EstabelecimentoData) GetEnderecoCodigoMunicipio() string {
	if x != nil {
		return x.EnderecoCodigoMunicipio
	}
	return ""
}

func (x *EstabelecimentoData) GetTelefone1Ddd() string {
	if x != nil {
		return x.Telefone1Ddd
	}
	return ""
}

func (x *EstabelecimentoData) GetTelefone1Numero() string {
	if x != nil {
		return x.Telefone1Numero
	}
	return ""
}

func (x *EstabelecimentoData) GetTelefone2Ddd() string {
	if x != nil {
		return x.Telefone2Ddd
	}
	return ""
}

func (x *EstabelecimentoData) GetTelefone2Numero() string {
	if x != nil {
		return x.Telefone2Numero
	}
	return ""
}

func (x *EstabelecimentoData) GetFaxDdd() string {
	if x != nil {
		return x.FaxDdd
	}
	return ""
}

func (x *EstabelecimentoData) GetFaxNumero() string {
	if x != nil {
		return x.FaxNumero
	}
	return ""
}

func (x *EstabelecimentoData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EstabelecimentoData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ServiceResponseEstabelecimento struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*EstabelecimentoData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseEstabelecimento) Reset() {
	*x = ServiceResponseEstabelecimento{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseEstabelecimento) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseEstabelecimento) ProtoMessage() {}

func (x *ServiceResponseEstabelecimento) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseEstabelecimento.ProtoReflect.Descriptor instead.
func (*ServiceResponseEstabelecimento) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{19}
}

func (x *ServiceResponseEstabelecimento) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseEstabelecimento) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseEstabelecimento) GetData() []*EstabelecimentoData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseEstabelecimento) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ServiceResponseListEstabelecimento struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                      `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ListResultEstabelecimento `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   string                     `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseListEstabelecimento) Reset() {
	*x = ServiceResponseListEstabelecimento{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseListEstabelecimento) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseListEstabelecimento) ProtoMessage() {}

func (x *ServiceResponseListEstabelecimento) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseListEstabelecimento.ProtoReflect.Descriptor instead.
func (*ServiceResponseListEstabelecimento) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{20}
}

func (x *ServiceResponseListEstabelecimento) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseListEstabelecimento) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseListEstabelecimento) GetData() *ListResultEstabelecimento {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseListEstabelecimento) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListResultEstabelecimento struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*EstabelecimentoData `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	Total  int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListResultEstabelecimento) Reset() {
	*x = ListResultEstabelecimento{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResultEstabelecimento) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResultEstabelecimento) ProtoMessage() {}

func (x *ListResultEstabelecimento) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResultEstabelecimento.ProtoReflect.Descriptor instead.
func (*ListResultEstabelecimento) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{21}
}

func (x *ListResultEstabelecimento) GetResult() []*EstabelecimentoData {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListResultEstabelecimento) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// MotivoSituacaoCadastral
type ListCriteriaRequestMotivoSituacaoCadastral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codigo    string            `protobuf:"bytes,1,opt,name=codigo,proto3" json:"codigo,omitempty"`
	Descricao string            `protobuf:"bytes,2,opt,name=descricao,proto3" json:"descricao,omitempty"`
	Items     int32             `protobuf:"varint,3,opt,name=items,proto3" json:"items,omitempty"`
	Page      int32             `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Order     map[string]string `protobuf:"bytes,5,rep,name=order,proto3" json:"order,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListCriteriaRequestMotivoSituacaoCadastral) Reset() {
	*x = ListCriteriaRequestMotivoSituacaoCadastral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCriteriaRequestMotivoSituacaoCadastral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCriteriaRequestMotivoSituacaoCadastral) ProtoMessage() {}

func (x *ListCriteriaRequestMotivoSituacaoCadastral) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCriteriaRequestMotivoSituacaoCadastral.ProtoReflect.Descriptor instead.
func (*ListCriteriaRequestMotivoSituacaoCadastral) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{22}
}

func (x *ListCriteriaRequestMotivoSituacaoCadastral) GetCodigo() string {
	if x != nil {
		return x.Codigo
	}
	return ""
}

func (x *ListCriteriaRequestMotivoSituacaoCadastral) GetDescricao() string {
	if x != nil {
		return x.Descricao
	}
	return ""
}

func (x *ListCriteriaRequestMotivoSituacaoCadastral) GetItems() int32 {
	if x != nil {
		return x.Items
	}
	return 0
}

func (x *ListCriteriaRequestMotivoSituacaoCadastral) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCriteriaRequestMotivoSituacaoCadastral) GetOrder() map[string]string {
	if x != nil {
		return x.Order
	}
	return nil
}

type MotivoSituacaoCadastralData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codigo    string `protobuf:"bytes,1,opt,name=codigo,proto3" json:"codigo,omitempty"`
	Descricao string `protobuf:"bytes,2,opt,name=descricao,proto3" json:"descricao,omitempty"`
}

func (x *MotivoSituacaoCadastralData) Reset() {
	*x = MotivoSituacaoCadastralData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MotivoSituacaoCadastralData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MotivoSituacaoCadastralData) ProtoMessage() {}

func (x *MotivoSituacaoCadastralData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MotivoSituacaoCadastralData.ProtoReflect.Descriptor instead.
func (*MotivoSituacaoCadastralData) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{23}
}

func (x *MotivoSituacaoCadastralData) GetCodigo() string {
	if x != nil {
		return x.Codigo
	}
	return ""
}

func (x *MotivoSituacaoCadastralData) GetDescricao() string {
	if x != nil {
		return x.Descricao
	}
	return ""
}

type ServiceResponseMotivoSituacaoCadastral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*MotivoSituacaoCadastralData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   string                         `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseMotivoSituacaoCadastral) Reset() {
	*x = ServiceResponseMotivoSituacaoCadastral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseMotivoSituacaoCadastral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseMotivoSituacaoCadastral) ProtoMessage() {}

func (x *ServiceResponseMotivoSituacaoCadastral) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseMotivoSituacaoCadastral.ProtoReflect.Descriptor instead.
func (*ServiceResponseMotivoSituacaoCadastral) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{24}
}

func (x *ServiceResponseMotivoSituacaoCadastral) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseMotivoSituacaoCadastral) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseMotivoSituacaoCadastral) GetData() []*MotivoSituacaoCadastralData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseMotivoSituacaoCadastral) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ServiceResponseListMotivoSituacaoCadastral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                              `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ListResultMotivoSituacaoCadastral `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   string                             `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseListMotivoSituacaoCadastral) Reset() {
	*x = ServiceResponseListMotivoSituacaoCadastral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseListMotivoSituacaoCadastral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseListMotivoSituacaoCadastral) ProtoMessage() {}

func (x *ServiceResponseListMotivoSituacaoCadastral) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseListMotivoSituacaoCadastral.ProtoReflect.Descriptor instead.
func (*ServiceResponseListMotivoSituacaoCadastral) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{25}
}

func (x *ServiceResponseListMotivoSituacaoCadastral) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseListMotivoSituacaoCadastral) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseListMotivoSituacaoCadastral) GetData() *ListResultMotivoSituacaoCadastral {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseListMotivoSituacaoCadastral) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListResultMotivoSituacaoCadastral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*MotivoSituacaoCadastralData `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	Total  int32                          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListResultMotivoSituacaoCadastral) Reset() {
	*x = ListResultMotivoSituacaoCadastral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResultMotivoSituacaoCadastral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResultMotivoSituacaoCadastral) ProtoMessage() {}

func (x *ListResultMotivoSituacaoCadastral) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResultMotivoSituacaoCadastral.ProtoReflect.Descriptor instead.
func (*ListResultMotivoSituacaoCadastral) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{26}
}

func (x *ListResultMotivoSituacaoCadastral) GetResult() []*MotivoSituacaoCadastralData {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListResultMotivoSituacaoCadastral) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Municipio
type ListCriteriaRequestMunicipio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codigo string            `protobuf:"bytes,1,opt,name=codigo,proto3" json:"codigo,omitempty"`
	Nome   string            `protobuf:"bytes,2,opt,name=nome,proto3" json:"nome,omitempty"`
	Items  int32             `protobuf:"varint,3,opt,name=items,proto3" json:"items,omitempty"`
	Page   int32             `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Order  map[string]string `protobuf:"bytes,5,rep,name=order,proto3" json:"order,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListCriteriaRequestMunicipio) Reset() {
	*x = ListCriteriaRequestMunicipio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCriteriaRequestMunicipio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCriteriaRequestMunicipio) ProtoMessage() {}

func (x *ListCriteriaRequestMunicipio) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCriteriaRequestMunicipio.ProtoReflect.Descriptor instead.
func (*ListCriteriaRequestMunicipio) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{27}
}

func (x *ListCriteriaRequestMunicipio) GetCodigo() string {
	if x != nil {
		return x.Codigo
	}
	return ""
}

func (x *ListCriteriaRequestMunicipio) GetNome() string {
	if x != nil {
		return x.Nome
	}
	return ""
}

func (x *ListCriteriaRequestMunicipio) GetItems() int32 {
	if x != nil {
		return x.Items
	}
	return 0
}

func (x *ListCriteriaRequestMunicipio) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCriteriaRequestMunicipio) GetOrder() map[string]string {
	if x != nil {
		return x.Order
	}
	return nil
}

type MunicipioData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codigo string `protobuf:"bytes,1,opt,name=codigo,proto3" json:"codigo,omitempty"`
	Nome   string `protobuf:"bytes,2,opt,name=nome,proto3" json:"nome,omitempty"`
}

func (x *MunicipioData) Reset() {
	*x = MunicipioData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MunicipioData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MunicipioData) ProtoMessage() {}

func (x *MunicipioData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MunicipioData.ProtoReflect.Descriptor instead.
func (*MunicipioData) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{28}
}

func (x *MunicipioData) GetCodigo() string {
	if x != nil {
		return x.Codigo
	}
	return ""
}

func (x *MunicipioData) GetNome() string {
	if x != nil {
		return x.Nome
	}
	return ""
}

type ServiceResponseMunicipio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32            `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*MunicipioData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   string           `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseMunicipio) Reset() {
	*x = ServiceResponseMunicipio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseMunicipio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseMunicipio) ProtoMessage() {}

func (x *ServiceResponseMunicipio) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseMunicipio.ProtoReflect.Descriptor instead.
func (*ServiceResponseMunicipio) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{29}
}

func (x *ServiceResponseMunicipio) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseMunicipio) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseMunicipio) GetData() []*MunicipioData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseMunicipio) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ServiceResponseListMunicipio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ListResultMunicipio `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   string               `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseListMunicipio) Reset() {
	*x = ServiceResponseListMunicipio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseListMunicipio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseListMunicipio) ProtoMessage() {}

func (x *ServiceResponseListMunicipio) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseListMunicipio.ProtoReflect.Descriptor instead.
func (*ServiceResponseListMunicipio) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{30}
}

func (x *ServiceResponseListMunicipio) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseListMunicipio) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseListMunicipio) GetData() *ListResultMunicipio {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseListMunicipio) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListResultMunicipio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*MunicipioData `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	Total  int32            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListResultMunicipio) Reset() {
	*x = ListResultMunicipio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResultMunicipio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResultMunicipio) ProtoMessage() {}

func (x *ListResultMunicipio) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResultMunicipio.ProtoReflect.Descriptor instead.
func (*ListResultMunicipio) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{31}
}

func (x *ListResultMunicipio) GetResult() []*MunicipioData {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListResultMunicipio) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// NaturezaJuridica
type ListCriteriaRequestNaturezaJuridica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codigo    string            `protobuf:"bytes,1,opt,name=codigo,proto3" json:"codigo,omitempty"`
	Descricao string            `protobuf:"bytes,2,opt,name=descricao,proto3" json:"descricao,omitempty"`
	Items     int32             `protobuf:"varint,3,opt,name=items,proto3" json:"items,omitempty"`
	Page      int32             `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Order     map[string]string `protobuf:"bytes,5,rep,name=order,proto3" json:"order,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListCriteriaRequestNaturezaJuridica) Reset() {
	*x = ListCriteriaRequestNaturezaJuridica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCriteriaRequestNaturezaJuridica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCriteriaRequestNaturezaJuridica) ProtoMessage() {}

func (x *ListCriteriaRequestNaturezaJuridica) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCriteriaRequestNaturezaJuridica.ProtoReflect.Descriptor instead.
func (*ListCriteriaRequestNaturezaJuridica) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{32}
}

func (x *ListCriteriaRequestNaturezaJuridica) GetCodigo() string {
	if x != nil {
		return x.Codigo
	}
	return ""
}

func (x *ListCriteriaRequestNaturezaJuridica) GetDescricao() string {
	if x != nil {
		return x.Descricao
	}
	return ""
}

func (x *ListCriteriaRequestNaturezaJuridica) GetItems() int32 {
	if x != nil {
		return x.Items
	}
	return 0
}

func (x *ListCriteriaRequestNaturezaJuridica) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCriteriaRequestNaturezaJuridica) GetOrder() map[string]string {
	if x != nil {
		return x.Order
	}
	return nil
}

type NaturezaJuridicaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codigo    string `protobuf:"bytes,1,opt,name=codigo,proto3" json:"codigo,omitempty"`
	Descricao string `protobuf:"bytes,2,opt,name=descricao,proto3" json:"descricao,omitempty"`
}

func (x *NaturezaJuridicaData) Reset() {
	*x = NaturezaJuridicaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NaturezaJuridicaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NaturezaJuridicaData) ProtoMessage() {}

func (x *NaturezaJuridicaData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NaturezaJuridicaData.ProtoReflect.Descriptor instead.
func (*NaturezaJuridicaData) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{33}
}

func (x *NaturezaJuridicaData) GetCodigo() string {
	if x != nil {
		return x.Codigo
	}
	return ""
}

func (x *NaturezaJuridicaData) GetDescricao() string {
	if x != nil {
		return x.Descricao
	}
	return ""
}

type ServiceResponseNaturezaJuridica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*NaturezaJuridicaData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   string                  `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseNaturezaJuridica) Reset() {
	*x = ServiceResponseNaturezaJuridica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseNaturezaJuridica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseNaturezaJuridica) ProtoMessage() {}

func (x *ServiceResponseNaturezaJuridica) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseNaturezaJuridica.ProtoReflect.Descriptor instead.
func (*ServiceResponseNaturezaJuridica) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{34}
}

func (x *ServiceResponseNaturezaJuridica) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseNaturezaJuridica) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseNaturezaJuridica) GetData() []*NaturezaJuridicaData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseNaturezaJuridica) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ServiceResponseListNaturezaJuridica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ListResultNaturezaJuridica `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   string                      `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseListNaturezaJuridica) Reset() {
	*x = ServiceResponseListNaturezaJuridica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseListNaturezaJuridica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseListNaturezaJuridica) ProtoMessage() {}

func (x *ServiceResponseListNaturezaJuridica) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseListNaturezaJuridica.ProtoReflect.Descriptor instead.
func (*ServiceResponseListNaturezaJuridica) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{35}
}

func (x *ServiceResponseListNaturezaJuridica) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseListNaturezaJuridica) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseListNaturezaJuridica) GetData() *ListResultNaturezaJuridica {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseListNaturezaJuridica) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListResultNaturezaJuridica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*NaturezaJuridicaData `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	Total  int32                   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListResultNaturezaJuridica) Reset() {
	*x = ListResultNaturezaJuridica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResultNaturezaJuridica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResultNaturezaJuridica) ProtoMessage() {}

func (x *ListResultNaturezaJuridica) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResultNaturezaJuridica.ProtoReflect.Descriptor instead.
func (*ListResultNaturezaJuridica) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{36}
}

func (x *ListResultNaturezaJuridica) GetResult() []*NaturezaJuridicaData {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListResultNaturezaJuridica) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// OptanteSimples
type ListCriteriaRequestOptanteSimples struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdEmpresa string            `protobuf:"bytes,1,opt,name=idEmpresa,proto3" json:"idEmpresa,omitempty"`
	Simples   string            `protobuf:"bytes,2,opt,name=simples,proto3" json:"simples,omitempty"`
	Items     int32             `protobuf:"varint,3,opt,name=items,proto3" json:"items,omitempty"`
	Page      int32             `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Order     map[string]string `protobuf:"bytes,5,rep,name=order,proto3" json:"order,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListCriteriaRequestOptanteSimples) Reset() {
	*x = ListCriteriaRequestOptanteSimples{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCriteriaRequestOptanteSimples) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCriteriaRequestOptanteSimples) ProtoMessage() {}

func (x *ListCriteriaRequestOptanteSimples) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCriteriaRequestOptanteSimples.ProtoReflect.Descriptor instead.
func (*ListCriteriaRequestOptanteSimples) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{37}
}

func (x *ListCriteriaRequestOptanteSimples) GetIdEmpresa() string {
	if x != nil {
		return x.IdEmpresa
	}
	return ""
}

func (x *ListCriteriaRequestOptanteSimples) GetSimples() string {
	if x != nil {
		return x.Simples
	}
	return ""
}

func (x *ListCriteriaRequestOptanteSimples) GetItems() int32 {
	if x != nil {
		return x.Items
	}
	return 0
}

func (x *ListCriteriaRequestOptanteSimples) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCriteriaRequestOptanteSimples) GetOrder() map[string]string {
	if x != nil {
		return x.Order
	}
	return nil
}

type OptanteSimplesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdEmpresa     string `protobuf:"bytes,1,opt,name=idEmpresa,proto3" json:"idEmpresa,omitempty"`
	Simples       string `protobuf:"bytes,2,opt,name=simples,proto3" json:"simples,omitempty"`
	SimplesInicio string `protobuf:"bytes,3,opt,name=simplesInicio,proto3" json:"simplesInicio,omitempty"`
	SimplesFim    string `protobuf:"bytes,4,opt,name=simplesFim,proto3" json:"simplesFim,omitempty"`
	Simei         string `protobuf:"bytes,5,opt,name=simei,proto3" json:"simei,omitempty"`
	SimeiInicio   string `protobuf:"bytes,6,opt,name=simeiInicio,proto3" json:"simeiInicio,omitempty"`
	SimeiFim      string `protobuf:"bytes,7,opt,name=simeiFim,proto3" json:"simeiFim,omitempty"`
}

func (x *OptanteSimplesData) Reset() {
	*x = OptanteSimplesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptanteSimplesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptanteSimplesData) ProtoMessage() {}

func (x *OptanteSimplesData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptanteSimplesData.ProtoReflect.Descriptor instead.
func (*OptanteSimplesData) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{38}
}

func (x *OptanteSimplesData) GetIdEmpresa() string {
	if x != nil {
		return x.IdEmpresa
	}
	return ""
}

func (x *OptanteSimplesData) GetSimples() string {
	if x != nil {
		return x.Simples
	}
	return ""
}

func (x *OptanteSimplesData) GetSimplesInicio() string {
	if x != nil {
		return x.SimplesInicio
	}
	return ""
}

func (x *OptanteSimplesData) GetSimplesFim() string {
	if x != nil {
		return x.SimplesFim
	}
	return ""
}

func (x *OptanteSimplesData) GetSimei() string {
	if x != nil {
		return x.Simei
	}
	return ""
}

func (x *OptanteSimplesData) GetSimeiInicio() string {
	if x != nil {
		return x.SimeiInicio
	}
	return ""
}

func (x *OptanteSimplesData) GetSimeiFim() string {
	if x != nil {
		return x.SimeiFim
	}
	return ""
}

type ServiceResponseOptanteSimples struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*OptanteSimplesData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   string                `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseOptanteSimples) Reset() {
	*x = ServiceResponseOptanteSimples{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseOptanteSimples) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseOptanteSimples) ProtoMessage() {}

func (x *ServiceResponseOptanteSimples) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseOptanteSimples.ProtoReflect.Descriptor instead.
func (*ServiceResponseOptanteSimples) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{39}
}

func (x *ServiceResponseOptanteSimples) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseOptanteSimples) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseOptanteSimples) GetData() []*OptanteSimplesData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseOptanteSimples) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ServiceResponseListOptanteSimples struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ListResultOptanteSimples `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   string                    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseListOptanteSimples) Reset() {
	*x = ServiceResponseListOptanteSimples{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseListOptanteSimples) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseListOptanteSimples) ProtoMessage() {}

func (x *ServiceResponseListOptanteSimples) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseListOptanteSimples.ProtoReflect.Descriptor instead.
func (*ServiceResponseListOptanteSimples) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{40}
}

func (x *ServiceResponseListOptanteSimples) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseListOptanteSimples) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseListOptanteSimples) GetData() *ListResultOptanteSimples {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseListOptanteSimples) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListResultOptanteSimples struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*OptanteSimplesData `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	Total  int32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListResultOptanteSimples) Reset() {
	*x = ListResultOptanteSimples{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResultOptanteSimples) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResultOptanteSimples) ProtoMessage() {}

func (x *ListResultOptanteSimples) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResultOptanteSimples.ProtoReflect.Descriptor instead.
func (*ListResultOptanteSimples) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{41}
}

func (x *ListResultOptanteSimples) GetResult() []*OptanteSimplesData {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListResultOptanteSimples) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Pais
type ListCriteriaRequestPais struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codigo    string            `protobuf:"bytes,1,opt,name=codigo,proto3" json:"codigo,omitempty"`
	Descricao string            `protobuf:"bytes,2,opt,name=descricao,proto3" json:"descricao,omitempty"`
	Items     int32             `protobuf:"varint,3,opt,name=items,proto3" json:"items,omitempty"`
	Page      int32             `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Order     map[string]string `protobuf:"bytes,5,rep,name=order,proto3" json:"order,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListCriteriaRequestPais) Reset() {
	*x = ListCriteriaRequestPais{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCriteriaRequestPais) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCriteriaRequestPais) ProtoMessage() {}

func (x *ListCriteriaRequestPais) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCriteriaRequestPais.ProtoReflect.Descriptor instead.
func (*ListCriteriaRequestPais) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{42}
}

func (x *ListCriteriaRequestPais) GetCodigo() string {
	if x != nil {
		return x.Codigo
	}
	return ""
}

func (x *ListCriteriaRequestPais) GetDescricao() string {
	if x != nil {
		return x.Descricao
	}
	return ""
}

func (x *ListCriteriaRequestPais) GetItems() int32 {
	if x != nil {
		return x.Items
	}
	return 0
}

func (x *ListCriteriaRequestPais) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCriteriaRequestPais) GetOrder() map[string]string {
	if x != nil {
		return x.Order
	}
	return nil
}

type PaisData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codigo    string `protobuf:"bytes,1,opt,name=codigo,proto3" json:"codigo,omitempty"`
	Descricao string `protobuf:"bytes,2,opt,name=descricao,proto3" json:"descricao,omitempty"`
}

func (x *PaisData) Reset() {
	*x = PaisData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaisData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaisData) ProtoMessage() {}

func (x *PaisData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaisData.ProtoReflect.Descriptor instead.
func (*PaisData) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{43}
}

func (x *PaisData) GetCodigo() string {
	if x != nil {
		return x.Codigo
	}
	return ""
}

func (x *PaisData) GetDescricao() string {
	if x != nil {
		return x.Descricao
	}
	return ""
}

type ServiceResponsePais struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*PaisData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   string      `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponsePais) Reset() {
	*x = ServiceResponsePais{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponsePais) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponsePais) ProtoMessage() {}

func (x *ServiceResponsePais) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponsePais.ProtoReflect.Descriptor instead.
func (*ServiceResponsePais) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{44}
}

func (x *ServiceResponsePais) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponsePais) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponsePais) GetData() []*PaisData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponsePais) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ServiceResponseListPais struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ListResultPais `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   string          `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseListPais) Reset() {
	*x = ServiceResponseListPais{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseListPais) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseListPais) ProtoMessage() {}

func (x *ServiceResponseListPais) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseListPais.ProtoReflect.Descriptor instead.
func (*ServiceResponseListPais) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{45}
}

func (x *ServiceResponseListPais) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseListPais) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseListPais) GetData() *ListResultPais {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseListPais) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListResultPais struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*PaisData `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	Total  int32       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListResultPais) Reset() {
	*x = ListResultPais{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResultPais) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResultPais) ProtoMessage() {}

func (x *ListResultPais) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResultPais.ProtoReflect.Descriptor instead.
func (*ListResultPais) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{46}
}

func (x *ListResultPais) GetResult() []*PaisData {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListResultPais) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// QualificacaoSocio
type ListCriteriaRequestQualificacaoSocio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codigo    string            `protobuf:"bytes,1,opt,name=codigo,proto3" json:"codigo,omitempty"`
	Descricao string            `protobuf:"bytes,2,opt,name=descricao,proto3" json:"descricao,omitempty"`
	Items     int32             `protobuf:"varint,3,opt,name=items,proto3" json:"items,omitempty"`
	Page      int32             `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Order     map[string]string `protobuf:"bytes,5,rep,name=order,proto3" json:"order,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListCriteriaRequestQualificacaoSocio) Reset() {
	*x = ListCriteriaRequestQualificacaoSocio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCriteriaRequestQualificacaoSocio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCriteriaRequestQualificacaoSocio) ProtoMessage() {}

func (x *ListCriteriaRequestQualificacaoSocio) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCriteriaRequestQualificacaoSocio.ProtoReflect.Descriptor instead.
func (*ListCriteriaRequestQualificacaoSocio) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{47}
}

func (x *ListCriteriaRequestQualificacaoSocio) GetCodigo() string {
	if x != nil {
		return x.Codigo
	}
	return ""
}

func (x *ListCriteriaRequestQualificacaoSocio) GetDescricao() string {
	if x != nil {
		return x.Descricao
	}
	return ""
}

func (x *ListCriteriaRequestQualificacaoSocio) GetItems() int32 {
	if x != nil {
		return x.Items
	}
	return 0
}

func (x *ListCriteriaRequestQualificacaoSocio) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCriteriaRequestQualificacaoSocio) GetOrder() map[string]string {
	if x != nil {
		return x.Order
	}
	return nil
}

type QualificacaoSocioData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codigo    string `protobuf:"bytes,1,opt,name=codigo,proto3" json:"codigo,omitempty"`
	Descricao string `protobuf:"bytes,2,opt,name=descricao,proto3" json:"descricao,omitempty"`
}

func (x *QualificacaoSocioData) Reset() {
	*x = QualificacaoSocioData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QualificacaoSocioData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualificacaoSocioData) ProtoMessage() {}

func (x *QualificacaoSocioData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualificacaoSocioData.ProtoReflect.Descriptor instead.
func (*QualificacaoSocioData) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{48}
}

func (x *QualificacaoSocioData) GetCodigo() string {
	if x != nil {
		return x.Codigo
	}
	return ""
}

func (x *QualificacaoSocioData) GetDescricao() string {
	if x != nil {
		return x.Descricao
	}
	return ""
}

type ServiceResponseQualificacaoSocio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*QualificacaoSocioData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   string                   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseQualificacaoSocio) Reset() {
	*x = ServiceResponseQualificacaoSocio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseQualificacaoSocio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseQualificacaoSocio) ProtoMessage() {}

func (x *ServiceResponseQualificacaoSocio) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseQualificacaoSocio.ProtoReflect.Descriptor instead.
func (*ServiceResponseQualificacaoSocio) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{49}
}

func (x *ServiceResponseQualificacaoSocio) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseQualificacaoSocio) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseQualificacaoSocio) GetData() []*QualificacaoSocioData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseQualificacaoSocio) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ServiceResponseListQualificacaoSocio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                        `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ListResultQualificacaoSocio `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   string                       `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseListQualificacaoSocio) Reset() {
	*x = ServiceResponseListQualificacaoSocio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseListQualificacaoSocio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseListQualificacaoSocio) ProtoMessage() {}

func (x *ServiceResponseListQualificacaoSocio) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseListQualificacaoSocio.ProtoReflect.Descriptor instead.
func (*ServiceResponseListQualificacaoSocio) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{50}
}

func (x *ServiceResponseListQualificacaoSocio) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseListQualificacaoSocio) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseListQualificacaoSocio) GetData() *ListResultQualificacaoSocio {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseListQualificacaoSocio) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListResultQualificacaoSocio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*QualificacaoSocioData `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	Total  int32                    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListResultQualificacaoSocio) Reset() {
	*x = ListResultQualificacaoSocio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResultQualificacaoSocio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResultQualificacaoSocio) ProtoMessage() {}

func (x *ListResultQualificacaoSocio) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResultQualificacaoSocio.ProtoReflect.Descriptor instead.
func (*ListResultQualificacaoSocio) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{51}
}

func (x *ListResultQualificacaoSocio) GetResult() []*QualificacaoSocioData {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListResultQualificacaoSocio) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Socio
type ListCriteriaRequestSocio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdEmpresa string            `protobuf:"bytes,1,opt,name=idEmpresa,proto3" json:"idEmpresa,omitempty"`
	CpfCnpj   string            `protobuf:"bytes,2,opt,name=cpfCnpj,proto3" json:"cpfCnpj,omitempty"`
	Items     int32             `protobuf:"varint,3,opt,name=items,proto3" json:"items,omitempty"`
	Page      int32             `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Order     map[string]string `protobuf:"bytes,5,rep,name=order,proto3" json:"order,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListCriteriaRequestSocio) Reset() {
	*x = ListCriteriaRequestSocio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCriteriaRequestSocio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCriteriaRequestSocio) ProtoMessage() {}

func (x *ListCriteriaRequestSocio) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCriteriaRequestSocio.ProtoReflect.Descriptor instead.
func (*ListCriteriaRequestSocio) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{52}
}

func (x *ListCriteriaRequestSocio) GetIdEmpresa() string {
	if x != nil {
		return x.IdEmpresa
	}
	return ""
}

func (x *ListCriteriaRequestSocio) GetCpfCnpj() string {
	if x != nil {
		return x.CpfCnpj
	}
	return ""
}

func (x *ListCriteriaRequestSocio) GetItems() int32 {
	if x != nil {
		return x.Items
	}
	return 0
}

func (x *ListCriteriaRequestSocio) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCriteriaRequestSocio) GetOrder() map[string]string {
	if x != nil {
		return x.Order
	}
	return nil
}

type SocioData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdEmpresa                            string `protobuf:"bytes,1,opt,name=idEmpresa,proto3" json:"idEmpresa,omitempty"`
	TipoPessoa                           bool   `protobuf:"varint,2,opt,name=tipoPessoa,proto3" json:"tipoPessoa,omitempty"`
	Nome                                 string `protobuf:"bytes,3,opt,name=nome,proto3" json:"nome,omitempty"`
	CpfCnpj                              string `protobuf:"bytes,4,opt,name=cpfCnpj,proto3" json:"cpfCnpj,omitempty"`
	CodigoQualificacao                   string `protobuf:"bytes,5,opt,name=codigoQualificacao,proto3" json:"codigoQualificacao,omitempty"`
	Data                                 string `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	CpfRepresentanteLegal                string `protobuf:"bytes,7,opt,name=cpfRepresentanteLegal,proto3" json:"cpfRepresentanteLegal,omitempty"`
	NomeRepresentanteLegal               string `protobuf:"bytes,8,opt,name=nomeRepresentanteLegal,proto3" json:"nomeRepresentanteLegal,omitempty"`
	CodigoQualificacaoRepresentanteLegal string `protobuf:"bytes,9,opt,name=codigoQualificacaoRepresentanteLegal,proto3" json:"codigoQualificacaoRepresentanteLegal,omitempty"`
	Id                                   int32  `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SocioData) Reset() {
	*x = SocioData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocioData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocioData) ProtoMessage() {}

func (x *SocioData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocioData.ProtoReflect.Descriptor instead.
func (*SocioData) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{53}
}

func (x *SocioData) GetIdEmpresa() string {
	if x != nil {
		return x.IdEmpresa
	}
	return ""
}

func (x *SocioData) GetTipoPessoa() bool {
	if x != nil {
		return x.TipoPessoa
	}
	return false
}

func (x *SocioData) GetNome() string {
	if x != nil {
		return x.Nome
	}
	return ""
}

func (x *SocioData) GetCpfCnpj() string {
	if x != nil {
		return x.CpfCnpj
	}
	return ""
}

func (x *SocioData) GetCodigoQualificacao() string {
	if x != nil {
		return x.CodigoQualificacao
	}
	return ""
}

func (x *SocioData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *SocioData) GetCpfRepresentanteLegal() string {
	if x != nil {
		return x.CpfRepresentanteLegal
	}
	return ""
}

func (x *SocioData) GetNomeRepresentanteLegal() string {
	if x != nil {
		return x.NomeRepresentanteLegal
	}
	return ""
}

func (x *SocioData) GetCodigoQualificacaoRepresentanteLegal() string {
	if x != nil {
		return x.CodigoQualificacaoRepresentanteLegal
	}
	return ""
}

func (x *SocioData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ServiceResponseSocio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32        `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*SocioData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Error   string       `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseSocio) Reset() {
	*x = ServiceResponseSocio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseSocio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseSocio) ProtoMessage() {}

func (x *ServiceResponseSocio) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseSocio.ProtoReflect.Descriptor instead.
func (*ServiceResponseSocio) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{54}
}

func (x *ServiceResponseSocio) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseSocio) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseSocio) GetData() []*SocioData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseSocio) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ServiceResponseListSocio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32            `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ListResultSocio `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Error   string           `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ServiceResponseListSocio) Reset() {
	*x = ServiceResponseListSocio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResponseListSocio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResponseListSocio) ProtoMessage() {}

func (x *ServiceResponseListSocio) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResponseListSocio.ProtoReflect.Descriptor instead.
func (*ServiceResponseListSocio) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{55}
}

func (x *ServiceResponseListSocio) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ServiceResponseListSocio) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceResponseListSocio) GetData() *ListResultSocio {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ServiceResponseListSocio) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListResultSocio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*SocioData `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	Total  int32        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListResultSocio) Reset() {
	*x = ListResultSocio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dados_receita_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResultSocio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResultSocio) ProtoMessage() {}

func (x *ListResultSocio) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dados_receita_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResultSocio.ProtoReflect.Descriptor instead.
func (*ListResultSocio) Descriptor() ([]byte, []int) {
	return file_proto_dados_receita_proto_rawDescGZIP(), []int{56}
}

func (x *ListResultSocio) GetResult() []*SocioData {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListResultSocio) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_proto_dados_receita_proto protoreflect.FileDescriptor

var file_proto_dados_receita_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x64, 0x6f, 0x73, 0x2d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x22, 0x0f, 0x0a, 0x0d, 0x57, 0x69,
	0x74, 0x68, 0x6f, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x1c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x6f, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xf2, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6e,
	0x70, 0x6a, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x64, 0x43,
	0x6e, 0x70, 0x6a, 0x43, 0x70, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x64,
	0x43, 0x6e, 0x70, 0x6a, 0x43, 0x70, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x4e, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x6e, 0x70, 0x6a, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x1a, 0x38, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x89, 0x09, 0x0a, 0x0f,
	0x43, 0x6e, 0x70, 0x6a, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x61, 0x7a, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x61, 0x7a, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x64, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x69, 0x64, 0x69, 0x61, 0x72, 0x69, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x69, 0x64, 0x69, 0x61, 0x72, 0x69,
	0x61, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x64, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f,
	0x64, 0x69, 0x67, 0x6f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6e, 0x70, 0x6a, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6e, 0x70, 0x6a, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x7a, 0x46, 0x69, 0x6c,
	0x69, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x72, 0x69,
	0x7a, 0x46, 0x69, 0x6c, 0x69, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x6e, 0x74, 0x61,
	0x73, 0x69, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x6e, 0x74, 0x61,
	0x73, 0x69, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43,
	0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61,
	0x6c, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61,
	0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61,
	0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x17, 0x6d, 0x6f, 0x74, 0x69, 0x76,
	0x6f, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72,
	0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6d, 0x6f, 0x74, 0x69, 0x76, 0x6f,
	0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61,
	0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x41, 0x62, 0x65, 0x72, 0x74, 0x75, 0x72,
	0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x41, 0x62, 0x65,
	0x72, 0x74, 0x75, 0x72, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6e, 0x61, 0x65, 0x50, 0x72, 0x69,
	0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6e,
	0x61, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6e, 0x61, 0x65, 0x53, 0x65, 0x63, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x69, 0x61, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6e, 0x61, 0x65, 0x53, 0x65, 0x63, 0x75, 0x6e, 0x64, 0x61,
	0x72, 0x69, 0x61, 0x12, 0x36, 0x0a, 0x16, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x54,
	0x69, 0x70, 0x6f, 0x4c, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x6f, 0x75, 0x72, 0x6f, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x54, 0x69, 0x70,
	0x6f, 0x4c, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x6f, 0x75, 0x72, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x4c, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x6f, 0x75, 0x72,
	0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63,
	0x6f, 0x4c, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x6f, 0x75, 0x72, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x6f, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x4e, 0x75, 0x6d,
	0x65, 0x72, 0x6f, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63,
	0x6f, 0x42, 0x61, 0x69, 0x72, 0x72, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x42, 0x61, 0x69, 0x72, 0x72, 0x6f, 0x12, 0x20, 0x0a,
	0x0b, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x43, 0x65, 0x70, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x43, 0x65, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x55, 0x66, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x55, 0x66, 0x12,
	0x38, 0x0a, 0x17, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x43, 0x6f, 0x64, 0x69, 0x67,
	0x6f, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x17, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x43, 0x6f, 0x64, 0x69, 0x67, 0x6f,
	0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6c,
	0x65, 0x66, 0x6f, 0x6e, 0x65, 0x31, 0x44, 0x64, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x74, 0x65, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65, 0x31, 0x44, 0x64, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x74, 0x65, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65, 0x31, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x6f,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65,
	0x31, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6c, 0x65, 0x66,
	0x6f, 0x6e, 0x65, 0x32, 0x44, 0x64, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x65, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65, 0x32, 0x44, 0x64, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x74,
	0x65, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65, 0x32, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x6f, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65, 0x32, 0x4e,
	0x75, 0x6d, 0x65, 0x72, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x78, 0x44, 0x64, 0x64, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x78, 0x44, 0x64, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x6f, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x6d, 0x65, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70,
	0x69, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x6d, 0x65, 0x4d, 0x75,
	0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x22, 0x69, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6e, 0x70, 0x6a, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x74, 0x61, 0x2e, 0x43, 0x6e, 0x70, 0x6a, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xa6, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6e, 0x70, 0x6a, 0x45, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x43, 0x6e, 0x70, 0x6a, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x98, 0x01, 0x0a, 0x1a,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6e, 0x70, 0x6a, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x43, 0x6e, 0x70, 0x6a, 0x45,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xf8, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6e,
	0x61, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6e, 0x61, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6e, 0x61, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x63, 0x61, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x63, 0x61, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x47,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x6e, 0x61, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x38, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x3c, 0x0a, 0x08, 0x43, 0x6e, 0x61, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6e, 0x61, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6e, 0x61,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x22,
	0x8a, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6e, 0x61, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x43, 0x6e, 0x61, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x94, 0x01, 0x0a,
	0x17, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6e, 0x61, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x43, 0x6e, 0x61, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x57, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x43, 0x6e, 0x61, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x43, 0x6e, 0x61, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xfe, 0x01, 0x0a,
	0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x61, 0x7a, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x61, 0x7a, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x61, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x1a, 0x38, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xed, 0x01,
	0x0a, 0x0b, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x72, 0x61, 0x7a, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x61, 0x7a, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x12,
	0x36, 0x0a, 0x16, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x7a,
	0x61, 0x4a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x7a, 0x61, 0x4a,
	0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x12, 0x38, 0x0a, 0x17, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x61, 0x76,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x61, 0x76, 0x65,
	0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x69, 0x74, 0x61,
	0x6c, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x22, 0x90, 0x01,
	0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x9a, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5d, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x61, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x74, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x8c, 0x02, 0x0a,
	0x22, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x45, 0x73, 0x74, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x63, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6e, 0x70, 0x6a, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6e, 0x70, 0x6a, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x6e, 0x74, 0x61,
	0x73, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x6e, 0x74, 0x61,
	0x73, 0x69, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x52, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x45, 0x73, 0x74, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x1a, 0x38, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc5, 0x08, 0x0a, 0x13,
	0x45, 0x73, 0x74, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x64, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x61, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x69, 0x64, 0x69, 0x61, 0x72, 0x69, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x69, 0x64, 0x69, 0x61,
	0x72, 0x69, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6e, 0x70, 0x6a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6e, 0x70, 0x6a, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x7a, 0x46,
	0x69, 0x6c, 0x69, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x61, 0x74,
	0x72, 0x69, 0x7a, 0x46, 0x69, 0x6c, 0x69, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x6e,
	0x74, 0x61, 0x73, 0x69, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x6e,
	0x74, 0x61, 0x73, 0x69, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61,
	0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x73, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74,
	0x72, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x74, 0x75, 0x61,
	0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f,
	0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x17, 0x6d, 0x6f, 0x74,
	0x69, 0x76, 0x6f, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73,
	0x74, 0x72, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6d, 0x6f, 0x74, 0x69,
	0x76, 0x6f, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74,
	0x72, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x41, 0x62, 0x65, 0x72, 0x74,
	0x75, 0x72, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x41,
	0x62, 0x65, 0x72, 0x74, 0x75, 0x72, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6e, 0x61, 0x65, 0x50,
	0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6e, 0x61, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x6e, 0x61, 0x65, 0x53, 0x65, 0x63, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x69, 0x61, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6e, 0x61, 0x65, 0x53, 0x65, 0x63, 0x75, 0x6e,
	0x64, 0x61, 0x72, 0x69, 0x61, 0x12, 0x36, 0x0a, 0x16, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63,
	0x6f, 0x54, 0x69, 0x70, 0x6f, 0x4c, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x6f, 0x75, 0x72, 0x6f, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x54,
	0x69, 0x70, 0x6f, 0x4c, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x6f, 0x75, 0x72, 0x6f, 0x12, 0x2e, 0x0a,
	0x12, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x4c, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x6f,
	0x75, 0x72, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x65, 0x63, 0x6f, 0x4c, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x6f, 0x75, 0x72, 0x6f, 0x12, 0x26, 0x0a,
	0x0e, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x6f, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x4e,
	0x75, 0x6d, 0x65, 0x72, 0x6f, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63,
	0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x65, 0x63, 0x6f, 0x42, 0x61, 0x69, 0x72, 0x72, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x42, 0x61, 0x69, 0x72, 0x72, 0x6f, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x43, 0x65, 0x70, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x43, 0x65,
	0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x55, 0x66, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x55,
	0x66, 0x12, 0x38, 0x0a, 0x17, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x43, 0x6f, 0x64,
	0x69, 0x67, 0x6f, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x17, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x43, 0x6f, 0x64, 0x69,
	0x67, 0x6f, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x74,
	0x65, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65, 0x31, 0x44, 0x64, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x65, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65, 0x31, 0x44, 0x64, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x74, 0x65, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65, 0x31, 0x4e, 0x75, 0x6d, 0x65,
	0x72, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6c, 0x65, 0x66, 0x6f,
	0x6e, 0x65, 0x31, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6c,
	0x65, 0x66, 0x6f, 0x6e, 0x65, 0x32, 0x44, 0x64, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x74, 0x65, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65, 0x32, 0x44, 0x64, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x74, 0x65, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65, 0x32, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x6f,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6c, 0x65, 0x66, 0x6f, 0x6e, 0x65,
	0x32, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x78, 0x44, 0x64,
	0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x78, 0x44, 0x64, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x6f, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x73, 0x74, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x63,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x45, 0x73, 0x74, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x63,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xaa, 0x01, 0x0a, 0x22, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x73,
	0x74, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x73, 0x74, 0x61, 0x62, 0x65, 0x6c, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x6d, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x45, 0x73, 0x74, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x6f,
	0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61,
	0x2e, 0x45, 0x73, 0x74, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xa2, 0x02, 0x0a, 0x2a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x6f,
	0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x5a, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x6f, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63,
	0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x38, 0x0a,
	0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a, 0x1b, 0x4d, 0x6f, 0x74, 0x69, 0x76,
	0x6f, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x22, 0xb0, 0x01, 0x0a,
	0x26, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x6f, 0x74, 0x69, 0x76, 0x6f, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61,
	0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x6f, 0x53, 0x69,
	0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0xba, 0x01, 0x0a, 0x2a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x6f, 0x53, 0x69, 0x74,
	0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x6f, 0x53,
	0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x7d, 0x0a, 0x21,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x6f,
	0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61,
	0x6c, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74,
	0x61, 0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x6f, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f,
	0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xfc, 0x01, 0x0a, 0x1c,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f,
	0x64, 0x69, 0x67, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x1a, 0x38, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3b, 0x0a, 0x0d, 0x4d, 0x75,
	0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x64, 0x69, 0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64,
	0x69, 0x67, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x6f, 0x6d, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x75, 0x6e, 0x69, 0x63,
	0x69, 0x70, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x74, 0x61, 0x2e, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x9e,
	0x01, 0x0a, 0x1c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69,
	0x70, 0x69, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x61, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x75, 0x6e,
	0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x94, 0x02, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x64, 0x69, 0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69,
	0x67, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x53, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a,
	0x38, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4c, 0x0a, 0x14, 0x4e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xac, 0x01, 0x0a,
	0x23, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69,
	0x64, 0x69, 0x63, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6f, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x7a,
	0x61, 0x4a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x12, 0x3b, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x92, 0x02, 0x0a,
	0x21, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x61, 0x6e, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x64, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x51, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x61, 0x6e, 0x74, 0x65, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x38, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xe6, 0x01, 0x0a, 0x12, 0x4f, 0x70, 0x74, 0x61, 0x6e, 0x74, 0x65, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x64, 0x45, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x45,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x69, 0x63, 0x69,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x49, 0x6e, 0x69, 0x63, 0x69, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x46, 0x69, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x46, 0x69, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x6d, 0x65, 0x69, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x69, 0x6d, 0x65, 0x69, 0x49, 0x6e, 0x69, 0x63, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x69, 0x6d, 0x65, 0x69, 0x49, 0x6e, 0x69, 0x63, 0x69, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x69, 0x6d, 0x65, 0x69, 0x46, 0x69, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x69, 0x6d, 0x65, 0x69, 0x46, 0x69, 0x6d, 0x22, 0x9e, 0x01, 0x0a, 0x1d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x70,
	0x74, 0x61, 0x6e, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x74,
	0x61, 0x6e, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xa8, 0x01, 0x0a, 0x21,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x61, 0x6e, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f, 0x70, 0x74, 0x61,
	0x6e, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6b, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x4f, 0x70, 0x74, 0x61, 0x6e, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x74, 0x61, 0x2e, 0x4f, 0x70, 0x74, 0x61, 0x6e, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0xfc, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x69, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x63, 0x61, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x63, 0x61, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x47, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x69, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x38, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x40, 0x0a, 0x08, 0x50, 0x61, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x63, 0x61, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x63, 0x61, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x69, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x69,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x94, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x69, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x69, 0x73, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x57, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x69, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x69, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x96, 0x02, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x63, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x64, 0x69, 0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69,
	0x67, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x1a, 0x38, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x15, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x63, 0x61, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x20, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xae, 0x01, 0x0a, 0x24, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x63, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f,
	0x53, 0x6f, 0x63, 0x69, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x71, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x6f,
	0x12, 0x3c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61,
	0x2e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x53, 0x6f, 0x63,
	0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x80, 0x02, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x63, 0x69,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x64, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x70, 0x66, 0x43, 0x6e, 0x70, 0x6a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x70, 0x66, 0x43, 0x6e, 0x70, 0x6a, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x38, 0x0a,
	0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8d, 0x03, 0x0a, 0x09, 0x53, 0x6f, 0x63, 0x69,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x64, 0x45, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x64, 0x45, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x70, 0x6f, 0x50, 0x65, 0x73, 0x73, 0x6f,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x74, 0x69, 0x70, 0x6f, 0x50, 0x65, 0x73,
	0x73, 0x6f, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x6f, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x70, 0x66, 0x43, 0x6e,
	0x70, 0x6a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x70, 0x66, 0x43, 0x6e, 0x70,
	0x6a, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63,
	0x6f, 0x64, 0x69, 0x67, 0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x15, 0x63, 0x70, 0x66, 0x52, 0x65, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x6e, 0x74, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x70, 0x66, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x6e, 0x74, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x16, 0x6e,
	0x6f, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x6e, 0x74, 0x65,
	0x4c, 0x65, 0x67, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6e, 0x6f, 0x6d,
	0x65, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x6e, 0x74, 0x65, 0x4c, 0x65,
	0x67, 0x61, 0x6c, 0x12, 0x52, 0x0a, 0x24, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x6e, 0x74, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x24, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x63, 0x61, 0x6f, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x6e,
	0x74, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x6f, 0x63, 0x69, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61,
	0x2e, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x96, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f,
	0x63, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x6f,
	0x63, 0x69, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x59, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x6f, 0x63,
	0x69, 0x6f, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x74, 0x61, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xd6, 0x12, 0x0a, 0x13, 0x44,
	0x61, 0x64, 0x6f, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x74, 0x61, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74,
	0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6e, 0x70, 0x6a, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61,
	0x22, 0x00, 0x12, 0x71, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6e, 0x70, 0x6a, 0x45, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x61, 0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6e, 0x70, 0x6a, 0x45, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x61, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6e, 0x70, 0x6a, 0x45, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x61, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6e, 0x61,
	0x65, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6e, 0x61, 0x65, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6e, 0x61,
	0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6e, 0x61,
	0x65, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74,
	0x61, 0x2e, 0x43, 0x6e, 0x61, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6e, 0x61, 0x65, 0x22, 0x00,
	0x12, 0x65, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x12,
	0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x61, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x22, 0x00, 0x12, 0x7d, 0x0a,
	0x13, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x73, 0x74, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x63, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x6f, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x73, 0x74, 0x61, 0x62, 0x65, 0x6c, 0x65,
	0x63, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x1a, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x73, 0x74, 0x61, 0x62,
	0x65, 0x6c, 0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x15,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x45, 0x73, 0x74, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x63, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x73, 0x74, 0x61, 0x62, 0x65, 0x6c,
	0x65, 0x63, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x22, 0x00, 0x12, 0x95, 0x01, 0x0a, 0x1b, 0x6c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x6f, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61,
	0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x12, 0x39, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f,
	0x74, 0x69, 0x76, 0x6f, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61,
	0x73, 0x74, 0x72, 0x61, 0x6c, 0x1a, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x6f, 0x53,
	0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c,
	0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x1d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x74,
	0x69, 0x76, 0x6f, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73,
	0x74, 0x72, 0x61, 0x6c, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x74, 0x61, 0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x76, 0x6f, 0x53, 0x69, 0x74, 0x75, 0x61,
	0x63, 0x61, 0x6f, 0x43, 0x61, 0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x6f, 0x74, 0x69, 0x76, 0x6f, 0x53, 0x69, 0x74, 0x75, 0x61, 0x63, 0x61, 0x6f, 0x43, 0x61,
	0x64, 0x61, 0x73, 0x74, 0x72, 0x61, 0x6c, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0d, 0x6c, 0x69, 0x73,
	0x74, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x75,
	0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x75, 0x6e, 0x69, 0x63,
	0x69, 0x70, 0x69, 0x6f, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69,
	0x70, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x69, 0x6f,
	0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x12, 0x32, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x1a,
	0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69, 0x64,
	0x69, 0x63, 0x61, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61, 0x12,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e,
	0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69, 0x64, 0x69, 0x63, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x7a, 0x61, 0x4a, 0x75, 0x72, 0x69,
	0x64, 0x69, 0x63, 0x61, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x70,
	0x74, 0x61, 0x6e, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4f, 0x70, 0x74, 0x61, 0x6e, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x1a, 0x30,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x70, 0x74, 0x61, 0x6e, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x69, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x61,
	0x6e, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x74, 0x61, 0x6e,
	0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x2c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x70, 0x74,
	0x61, 0x6e, 0x74, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5c, 0x0a,
	0x08, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x69, 0x73, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x69,
	0x73, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74,
	0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x69, 0x73, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x69, 0x73, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x69, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x61, 0x69, 0x73, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x15, 0x6c, 0x69, 0x73,
	0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x53, 0x6f, 0x63,
	0x69, 0x6f, 0x12, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63,
	0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x1a, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x22, 0x00, 0x12, 0x72,
	0x0a, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x63, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x1a,
	0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x63, 0x61, 0x6f, 0x53, 0x6f, 0x63, 0x69, 0x6f,
	0x22, 0x00, 0x12, 0x5f, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x12,
	0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x63, 0x69,
	0x6f, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x63,
	0x69, 0x6f, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x74, 0x61, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x6f, 0x63, 0x69,
	0x6f, 0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x76, 0x65, 0x72, 0x62, 0x61,
	0x63, 0x68, 0x44, 0x65, 0x76, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x6e, 0x65, 0x73, 0x74, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_dados_receita_proto_rawDescOnce sync.Once
	file_proto_dados_receita_proto_rawDescData = file_proto_dados_receita_proto_rawDesc
)

func file_proto_dados_receita_proto_rawDescGZIP() []byte {
	file_proto_dados_receita_proto_rawDescOnce.Do(func() {
		file_proto_dados_receita_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dados_receita_proto_rawDescData)
	})
	return file_proto_dados_receita_proto_rawDescData
}

var file_proto_dados_receita_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_proto_dados_receita_proto_goTypes = []interface{}{
	(*WithoutParams)(nil),                              // 0: proto.receita.WithoutParams
	(*ServiceResponseProcessImport)(nil),               // 1: proto.receita.ServiceResponseProcessImport
	(*ListCriteriaRequestCnpjEmpresa)(nil),             // 2: proto.receita.ListCriteriaRequestCnpjEmpresa
	(*CnpjEmpresaData)(nil),                            // 3: proto.receita.CnpjEmpresaData
	(*ListResultCnpjEmpresaData)(nil),                  // 4: proto.receita.ListResultCnpjEmpresaData
	(*ServiceResponseListCnpjEmpresa)(nil),             // 5: proto.receita.ServiceResponseListCnpjEmpresa
	(*ServiceResponseCnpjEmpresa)(nil),                 // 6: proto.receita.ServiceResponseCnpjEmpresa
	(*ListCriteriaRequestCnae)(nil),                    // 7: proto.receita.ListCriteriaRequestCnae
	(*CnaeData)(nil),                                   // 8: proto.receita.CnaeData
	(*ServiceResponseCnae)(nil),                        // 9: proto.receita.ServiceResponseCnae
	(*ServiceResponseListCnae)(nil),                    // 10: proto.receita.ServiceResponseListCnae
	(*ListResultCnae)(nil),                             // 11: proto.receita.ListResultCnae
	(*ListCriteriaRequestEmpresa)(nil),                 // 12: proto.receita.ListCriteriaRequestEmpresa
	(*EmpresaData)(nil),                                // 13: proto.receita.EmpresaData
	(*ServiceResponseEmpresa)(nil),                     // 14: proto.receita.ServiceResponseEmpresa
	(*ServiceResponseListEmpresa)(nil),                 // 15: proto.receita.ServiceResponseListEmpresa
	(*ListResultEmpresa)(nil),                          // 16: proto.receita.ListResultEmpresa
	(*ListCriteriaRequestEstabelecimento)(nil),         // 17: proto.receita.ListCriteriaRequestEstabelecimento
	(*EstabelecimentoData)(nil),                        // 18: proto.receita.EstabelecimentoData
	(*ServiceResponseEstabelecimento)(nil),             // 19: proto.receita.ServiceResponseEstabelecimento
	(*ServiceResponseListEstabelecimento)(nil),         // 20: proto.receita.ServiceResponseListEstabelecimento
	(*ListResultEstabelecimento)(nil),                  // 21: proto.receita.ListResultEstabelecimento
	(*ListCriteriaRequestMotivoSituacaoCadastral)(nil), // 22: proto.receita.ListCriteriaRequestMotivoSituacaoCadastral
	(*MotivoSituacaoCadastralData)(nil),                // 23: proto.receita.MotivoSituacaoCadastralData
	(*ServiceResponseMotivoSituacaoCadastral)(nil),     // 24: proto.receita.ServiceResponseMotivoSituacaoCadastral
	(*ServiceResponseListMotivoSituacaoCadastral)(nil), // 25: proto.receita.ServiceResponseListMotivoSituacaoCadastral
	(*ListResultMotivoSituacaoCadastral)(nil),          // 26: proto.receita.ListResultMotivoSituacaoCadastral
	(*ListCriteriaRequestMunicipio)(nil),               // 27: proto.receita.ListCriteriaRequestMunicipio
	(*MunicipioData)(nil),                              // 28: proto.receita.MunicipioData
	(*ServiceResponseMunicipio)(nil),                   // 29: proto.receita.ServiceResponseMunicipio
	(*ServiceResponseListMunicipio)(nil),               // 30: proto.receita.ServiceResponseListMunicipio
	(*ListResultMunicipio)(nil),                        // 31: proto.receita.ListResultMunicipio
	(*ListCriteriaRequestNaturezaJuridica)(nil),        // 32: proto.receita.ListCriteriaRequestNaturezaJuridica
	(*NaturezaJuridicaData)(nil),                       // 33: proto.receita.NaturezaJuridicaData
	(*ServiceResponseNaturezaJuridica)(nil),            // 34: proto.receita.ServiceResponseNaturezaJuridica
	(*ServiceResponseListNaturezaJuridica)(nil),        // 35: proto.receita.ServiceResponseListNaturezaJuridica
	(*ListResultNaturezaJuridica)(nil),                 // 36: proto.receita.ListResultNaturezaJuridica
	(*ListCriteriaRequestOptanteSimples)(nil),          // 37: proto.receita.ListCriteriaRequestOptanteSimples
	(*OptanteSimplesData)(nil),                         // 38: proto.receita.OptanteSimplesData
	(*ServiceResponseOptanteSimples)(nil),              // 39: proto.receita.ServiceResponseOptanteSimples
	(*ServiceResponseListOptanteSimples)(nil),          // 40: proto.receita.ServiceResponseListOptanteSimples
	(*ListResultOptanteSimples)(nil),                   // 41: proto.receita.ListResultOptanteSimples
	(*ListCriteriaRequestPais)(nil),                    // 42: proto.receita.ListCriteriaRequestPais
	(*PaisData)(nil),                                   // 43: proto.receita.PaisData
	(*ServiceResponsePais)(nil),                        // 44: proto.receita.ServiceResponsePais
	(*ServiceResponseListPais)(nil),                    // 45: proto.receita.ServiceResponseListPais
	(*ListResultPais)(nil),                             // 46: proto.receita.ListResultPais
	(*ListCriteriaRequestQualificacaoSocio)(nil),       // 47: proto.receita.ListCriteriaRequestQualificacaoSocio
	(*QualificacaoSocioData)(nil),                      // 48: proto.receita.QualificacaoSocioData
	(*ServiceResponseQualificacaoSocio)(nil),           // 49: proto.receita.ServiceResponseQualificacaoSocio
	(*ServiceResponseListQualificacaoSocio)(nil),       // 50: proto.receita.ServiceResponseListQualificacaoSocio
	(*ListResultQualificacaoSocio)(nil),                // 51: proto.receita.ListResultQualificacaoSocio
	(*ListCriteriaRequestSocio)(nil),                   // 52: proto.receita.ListCriteriaRequestSocio
	(*SocioData)(nil),                                  // 53: proto.receita.SocioData
	(*ServiceResponseSocio)(nil),                       // 54: proto.receita.ServiceResponseSocio
	(*ServiceResponseListSocio)(nil),                   // 55: proto.receita.ServiceResponseListSocio
	(*ListResultSocio)(nil),                            // 56: proto.receita.ListResultSocio
	nil,                                                // 57: proto.receita.ListCriteriaRequestCnpjEmpresa.OrderEntry
	nil,                                                // 58: proto.receita.ListCriteriaRequestCnae.OrderEntry
	nil,                                                // 59: proto.receita.ListCriteriaRequestEmpresa.OrderEntry
	nil,                                                // 60: proto.receita.ListCriteriaRequestEstabelecimento.OrderEntry
	nil,                                                // 61: proto.receita.ListCriteriaRequestMotivoSituacaoCadastral.OrderEntry
	nil,                                                // 62: proto.receita.ListCriteriaRequestMunicipio.OrderEntry
	nil,                                                // 63: proto.receita.ListCriteriaRequestNaturezaJuridica.OrderEntry
	nil,                                                // 64: proto.receita.ListCriteriaRequestOptanteSimples.OrderEntry
	nil,                                                // 65: proto.receita.ListCriteriaRequestPais.OrderEntry
	nil,                                                // 66: proto.receita.ListCriteriaRequestQualificacaoSocio.OrderEntry
	nil,                                                // 67: proto.receita.ListCriteriaRequestSocio.OrderEntry
}
var file_proto_dados_receita_proto_depIdxs = []int32{
	0,  // 0: proto.receita.ServiceResponseProcessImport.data:type_name -> proto.receita.WithoutParams
	57, // 1: proto.receita.ListCriteriaRequestCnpjEmpresa.order:type_name -> proto.receita.ListCriteriaRequestCnpjEmpresa.OrderEntry
	3,  // 2: proto.receita.ListResultCnpjEmpresaData.result:type_name -> proto.receita.CnpjEmpresaData
	4,  // 3: proto.receita.ServiceResponseListCnpjEmpresa.data:type_name -> proto.receita.ListResultCnpjEmpresaData
	3,  // 4: proto.receita.ServiceResponseCnpjEmpresa.data:type_name -> proto.receita.CnpjEmpresaData
	58, // 5: proto.receita.ListCriteriaRequestCnae.order:type_name -> proto.receita.ListCriteriaRequestCnae.OrderEntry
	8,  // 6: proto.receita.ServiceResponseCnae.data:type_name -> proto.receita.CnaeData
	11, // 7: proto.receita.ServiceResponseListCnae.data:type_name -> proto.receita.ListResultCnae
	8,  // 8: proto.receita.ListResultCnae.result:type_name -> proto.receita.CnaeData
	59, // 9: proto.receita.ListCriteriaRequestEmpresa.order:type_name -> proto.receita.ListCriteriaRequestEmpresa.OrderEntry
	13, // 10: proto.receita.ServiceResponseEmpresa.data:type_name -> proto.receita.EmpresaData
	16, // 11: proto.receita.ServiceResponseListEmpresa.data:type_name -> proto.receita.ListResultEmpresa
	13, // 12: proto.receita.ListResultEmpresa.result:type_name -> proto.receita.EmpresaData
	60, // 13: proto.receita.ListCriteriaRequestEstabelecimento.order:type_name -> proto.receita.ListCriteriaRequestEstabelecimento.OrderEntry
	18, // 14: proto.receita.ServiceResponseEstabelecimento.data:type_name -> proto.receita.EstabelecimentoData
	21, // 15: proto.receita.ServiceResponseListEstabelecimento.data:type_name -> proto.receita.ListResultEstabelecimento
	18, // 16: proto.receita.ListResultEstabelecimento.result:type_name -> proto.receita.EstabelecimentoData
	61, // 17: proto.receita.ListCriteriaRequestMotivoSituacaoCadastral.order:type_name -> proto.receita.ListCriteriaRequestMotivoSituacaoCadastral.OrderEntry
	23, // 18: proto.receita.ServiceResponseMotivoSituacaoCadastral.data:type_name -> proto.receita.MotivoSituacaoCadastralData
	26, // 19: proto.receita.ServiceResponseListMotivoSituacaoCadastral.data:type_name -> proto.receita.ListResultMotivoSituacaoCadastral
	23, // 20: proto.receita.ListResultMotivoSituacaoCadastral.result:type_name -> proto.receita.MotivoSituacaoCadastralData
	62, // 21: proto.receita.ListCriteriaRequestMunicipio.order:type_name -> proto.receita.ListCriteriaRequestMunicipio.OrderEntry
	28, // 22: proto.receita.ServiceResponseMunicipio.data:type_name -> proto.receita.MunicipioData
	31, // 23: proto.receita.ServiceResponseListMunicipio.data:type_name -> proto.receita.ListResultMunicipio
	28, // 24: proto.receita.ListResultMunicipio.result:type_name -> proto.receita.MunicipioData
	63, // 25: proto.receita.ListCriteriaRequestNaturezaJuridica.order:type_name -> proto.receita.ListCriteriaRequestNaturezaJuridica.OrderEntry
	33, // 26: proto.receita.ServiceResponseNaturezaJuridica.data:type_name -> proto.receita.NaturezaJuridicaData
	36, // 27: proto.receita.ServiceResponseListNaturezaJuridica.data:type_name -> proto.receita.ListResultNaturezaJuridica
	33, // 28: proto.receita.ListResultNaturezaJuridica.result:type_name -> proto.receita.NaturezaJuridicaData
	64, // 29: proto.receita.ListCriteriaRequestOptanteSimples.order:type_name -> proto.receita.ListCriteriaRequestOptanteSimples.OrderEntry
	38, // 30: proto.receita.ServiceResponseOptanteSimples.data:type_name -> proto.receita.OptanteSimplesData
	41, // 31: proto.receita.ServiceResponseListOptanteSimples.data:type_name -> proto.receita.ListResultOptanteSimples
	38, // 32: proto.receita.ListResultOptanteSimples.result:type_name -> proto.receita.OptanteSimplesData
	65, // 33: proto.receita.ListCriteriaRequestPais.order:type_name -> proto.receita.ListCriteriaRequestPais.OrderEntry
	43, // 34: proto.receita.ServiceResponsePais.data:type_name -> proto.receita.PaisData
	46, // 35: proto.receita.ServiceResponseListPais.data:type_name -> proto.receita.ListResultPais
	43, // 36: proto.receita.ListResultPais.result:type_name -> proto.receita.PaisData
	66, // 37: proto.receita.ListCriteriaRequestQualificacaoSocio.order:type_name -> proto.receita.ListCriteriaRequestQualificacaoSocio.OrderEntry
	48, // 38: proto.receita.ServiceResponseQualificacaoSocio.data:type_name -> proto.receita.QualificacaoSocioData
	51, // 39: proto.receita.ServiceResponseListQualificacaoSocio.data:type_name -> proto.receita.ListResultQualificacaoSocio
	48, // 40: proto.receita.ListResultQualificacaoSocio.result:type_name -> proto.receita.QualificacaoSocioData
	67, // 41: proto.receita.ListCriteriaRequestSocio.order:type_name -> proto.receita.ListCriteriaRequestSocio.OrderEntry
	53, // 42: proto.receita.ServiceResponseSocio.data:type_name -> proto.receita.SocioData
	56, // 43: proto.receita.ServiceResponseListSocio.data:type_name -> proto.receita.ListResultSocio
	53, // 44: proto.receita.ListResultSocio.result:type_name -> proto.receita.SocioData
	0,  // 45: proto.receita.DadosReceitaService.processImport:input_type -> proto.receita.WithoutParams
	2,  // 46: proto.receita.DadosReceitaService.listCnpjEmpresa:input_type -> proto.receita.ListCriteriaRequestCnpjEmpresa
	7,  // 47: proto.receita.DadosReceitaService.listCnae:input_type -> proto.receita.ListCriteriaRequestCnae
	8,  // 48: proto.receita.DadosReceitaService.createCnae:input_type -> proto.receita.CnaeData
	12, // 49: proto.receita.DadosReceitaService.listEmpresa:input_type -> proto.receita.ListCriteriaRequestEmpresa
	13, // 50: proto.receita.DadosReceitaService.createEmpresa:input_type -> proto.receita.EmpresaData
	17, // 51: proto.receita.DadosReceitaService.listEstabelecimento:input_type -> proto.receita.ListCriteriaRequestEstabelecimento
	18, // 52: proto.receita.DadosReceitaService.createEstabelecimento:input_type -> proto.receita.EstabelecimentoData
	22, // 53: proto.receita.DadosReceitaService.listMotivoSituacaoCadastral:input_type -> proto.receita.ListCriteriaRequestMotivoSituacaoCadastral
	23, // 54: proto.receita.DadosReceitaService.createMotivoSituacaoCadastral:input_type -> proto.receita.MotivoSituacaoCadastralData
	27, // 55: proto.receita.DadosReceitaService.listMunicipio:input_type -> proto.receita.ListCriteriaRequestMunicipio
	28, // 56: proto.receita.DadosReceitaService.createMunicipio:input_type -> proto.receita.MunicipioData
	32, // 57: proto.receita.DadosReceitaService.listNaturezaJuridica:input_type -> proto.receita.ListCriteriaRequestNaturezaJuridica
	33, // 58: proto.receita.DadosReceitaService.createNaturezaJuridica:input_type -> proto.receita.NaturezaJuridicaData
	37, // 59: proto.receita.DadosReceitaService.listOptanteSimples:input_type -> proto.receita.ListCriteriaRequestOptanteSimples
	38, // 60: proto.receita.DadosReceitaService.createOptanteSimples:input_type -> proto.receita.OptanteSimplesData
	42, // 61: proto.receita.DadosReceitaService.listPais:input_type -> proto.receita.ListCriteriaRequestPais
	43, // 62: proto.receita.DadosReceitaService.createPais:input_type -> proto.receita.PaisData
	47, // 63: proto.receita.DadosReceitaService.listQualificacaoSocio:input_type -> proto.receita.ListCriteriaRequestQualificacaoSocio
	48, // 64: proto.receita.DadosReceitaService.createQualificacaoSocio:input_type -> proto.receita.QualificacaoSocioData
	52, // 65: proto.receita.DadosReceitaService.listSocio:input_type -> proto.receita.ListCriteriaRequestSocio
	53, // 66: proto.receita.DadosReceitaService.createSocio:input_type -> proto.receita.SocioData
	5,  // 67: proto.receita.DadosReceitaService.processImport:output_type -> proto.receita.ServiceResponseListCnpjEmpresa
	5,  // 68: proto.receita.DadosReceitaService.listCnpjEmpresa:output_type -> proto.receita.ServiceResponseListCnpjEmpresa
	10, // 69: proto.receita.DadosReceitaService.listCnae:output_type -> proto.receita.ServiceResponseListCnae
	9,  // 70: proto.receita.DadosReceitaService.createCnae:output_type -> proto.receita.ServiceResponseCnae
	15, // 71: proto.receita.DadosReceitaService.listEmpresa:output_type -> proto.receita.ServiceResponseListEmpresa
	14, // 72: proto.receita.DadosReceitaService.createEmpresa:output_type -> proto.receita.ServiceResponseEmpresa
	20, // 73: proto.receita.DadosReceitaService.listEstabelecimento:output_type -> proto.receita.ServiceResponseListEstabelecimento
	19, // 74: proto.receita.DadosReceitaService.createEstabelecimento:output_type -> proto.receita.ServiceResponseEstabelecimento
	25, // 75: proto.receita.DadosReceitaService.listMotivoSituacaoCadastral:output_type -> proto.receita.ServiceResponseListMotivoSituacaoCadastral
	24, // 76: proto.receita.DadosReceitaService.createMotivoSituacaoCadastral:output_type -> proto.receita.ServiceResponseMotivoSituacaoCadastral
	30, // 77: proto.receita.DadosReceitaService.listMunicipio:output_type -> proto.receita.ServiceResponseListMunicipio
	29, // 78: proto.receita.DadosReceitaService.createMunicipio:output_type -> proto.receita.ServiceResponseMunicipio
	35, // 79: proto.receita.DadosReceitaService.listNaturezaJuridica:output_type -> proto.receita.ServiceResponseListNaturezaJuridica
	34, // 80: proto.receita.DadosReceitaService.createNaturezaJuridica:output_type -> proto.receita.ServiceResponseNaturezaJuridica
	40, // 81: proto.receita.DadosReceitaService.listOptanteSimples:output_type -> proto.receita.ServiceResponseListOptanteSimples
	39, // 82: proto.receita.DadosReceitaService.createOptanteSimples:output_type -> proto.receita.ServiceResponseOptanteSimples
	45, // 83: proto.receita.DadosReceitaService.listPais:output_type -> proto.receita.ServiceResponseListPais
	44, // 84: proto.receita.DadosReceitaService.createPais:output_type -> proto.receita.ServiceResponsePais
	50, // 85: proto.receita.DadosReceitaService.listQualificacaoSocio:output_type -> proto.receita.ServiceResponseListQualificacaoSocio
	49, // 86: proto.receita.DadosReceitaService.createQualificacaoSocio:output_type -> proto.receita.ServiceResponseQualificacaoSocio
	55, // 87: proto.receita.DadosReceitaService.listSocio:output_type -> proto.receita.ServiceResponseListSocio
	54, // 88: proto.receita.DadosReceitaService.createSocio:output_type -> proto.receita.ServiceResponseSocio
	67, // [67:89] is the sub-list for method output_type
	45, // [45:67] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_proto_dados_receita_proto_init() }
func file_proto_dados_receita_proto_init() {
	if File_proto_dados_receita_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dados_receita_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithoutParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseProcessImport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCriteriaRequestCnpjEmpresa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CnpjEmpresaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResultCnpjEmpresaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseListCnpjEmpresa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseCnpjEmpresa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCriteriaRequestCnae); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CnaeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseCnae); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseListCnae); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResultCnae); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCriteriaRequestEmpresa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmpresaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseEmpresa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseListEmpresa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResultEmpresa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCriteriaRequestEstabelecimento); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstabelecimentoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseEstabelecimento); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseListEstabelecimento); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResultEstabelecimento); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCriteriaRequestMotivoSituacaoCadastral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MotivoSituacaoCadastralData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseMotivoSituacaoCadastral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseListMotivoSituacaoCadastral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResultMotivoSituacaoCadastral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCriteriaRequestMunicipio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MunicipioData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseMunicipio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseListMunicipio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResultMunicipio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCriteriaRequestNaturezaJuridica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NaturezaJuridicaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseNaturezaJuridica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseListNaturezaJuridica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResultNaturezaJuridica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCriteriaRequestOptanteSimples); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptanteSimplesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseOptanteSimples); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseListOptanteSimples); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResultOptanteSimples); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCriteriaRequestPais); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaisData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponsePais); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseListPais); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResultPais); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCriteriaRequestQualificacaoSocio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QualificacaoSocioData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseQualificacaoSocio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseListQualificacaoSocio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResultQualificacaoSocio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCriteriaRequestSocio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocioData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseSocio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResponseListSocio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dados_receita_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResultSocio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dados_receita_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dados_receita_proto_goTypes,
		DependencyIndexes: file_proto_dados_receita_proto_depIdxs,
		MessageInfos:      file_proto_dados_receita_proto_msgTypes,
	}.Build()
	File_proto_dados_receita_proto = out.File
	file_proto_dados_receita_proto_rawDesc = nil
	file_proto_dados_receita_proto_goTypes = nil
	file_proto_dados_receita_proto_depIdxs = nil
}
